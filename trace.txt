/Users/D032227/dev/cpp/spcmake/CMakeLists.txt(1):  cmake_minimum_required(VERSION 3.27.0 )Put cmake in trace mode, but with variables expanded.

/Users/D032227/dev/cpp/spcmake/CMakeLists.txt(2):  project(shadedpathv VERSION 0.1.0 LANGUAGES C CXX )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeSystem.cmake(1):  set(CMAKE_HOST_SYSTEM Darwin-23.1.0 )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeSystem.cmake(2):  set(CMAKE_HOST_SYSTEM_NAME Darwin )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeSystem.cmake(3):  set(CMAKE_HOST_SYSTEM_VERSION 23.1.0 )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeSystem.cmake(4):  set(CMAKE_HOST_SYSTEM_PROCESSOR arm64 )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeSystem.cmake(8):  set(CMAKE_SYSTEM Darwin-23.1.0 )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeSystem.cmake(9):  set(CMAKE_SYSTEM_NAME Darwin )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeSystem.cmake(10):  set(CMAKE_SYSTEM_VERSION 23.1.0 )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeSystem.cmake(11):  set(CMAKE_SYSTEM_PROCESSOR arm64 )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeSystem.cmake(13):  set(CMAKE_CROSSCOMPILING FALSE )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeSystem.cmake(15):  set(CMAKE_SYSTEM_LOADED 1 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeSystemSpecificInitialize.cmake(13):  unset(APPLE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeSystemSpecificInitialize.cmake(14):  unset(UNIX )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeSystemSpecificInitialize.cmake(15):  unset(CYGWIN )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeSystemSpecificInitialize.cmake(16):  unset(MSYS )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeSystemSpecificInitialize.cmake(17):  unset(WIN32 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeSystemSpecificInitialize.cmake(18):  unset(BSD )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeSystemSpecificInitialize.cmake(19):  unset(LINUX )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeSystemSpecificInitialize.cmake(32):  set(CMAKE_EFFECTIVE_SYSTEM_NAME Darwin )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeSystemSpecificInitialize.cmake(34):  include(Platform/Darwin-Initialize OPTIONAL )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin-Initialize.cmake(1):  set(APPLE 1 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin-Initialize.cmake(2):  set(UNIX 1 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin-Initialize.cmake(5):  execute_process(COMMAND xcode-select -print-path OUTPUT_VARIABLE _stdout OUTPUT_STRIP_TRAILING_WHITESPACE ERROR_VARIABLE _stderr RESULT_VARIABLE _failed )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin-Initialize.cmake(10):  if(NOT _failed AND IS_DIRECTORY /Library/Developer/CommandLineTools )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin-Initialize.cmake(11):  set(OSX_DEVELOPER_ROOT /Library/Developer/CommandLineTools )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin-Initialize.cmake(18):  execute_process(COMMAND sw_vers -productVersion OUTPUT_VARIABLE CURRENT_OSX_VERSION OUTPUT_STRIP_TRAILING_WHITESPACE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin-Initialize.cmake(23):  set(CMAKE_OSX_ARCHITECTURES  CACHE STRING Build architectures for OSX )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin-Initialize.cmake(26):  if(NOT CMAKE_CROSSCOMPILING AND CMAKE_SYSTEM_NAME STREQUAL Darwin AND CMAKE_HOST_SYSTEM_PROCESSOR MATCHES ^(arm64|x86_64)$ )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin-Initialize.cmake(29):  execute_process(COMMAND sysctl -q hw.optional.arm64 OUTPUT_VARIABLE _sysctl_stdout ERROR_VARIABLE _sysctl_stderr RESULT_VARIABLE _sysctl_result )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin-Initialize.cmake(38):  if(_sysctl_result EQUAL 0 AND _sysctl_stdout MATCHES hw.optional.arm64: 1 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin-Initialize.cmake(39):  set(_CMAKE_APPLE_ARCHS_DEFAULT arm64 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin-Initialize.cmake(41):  unset(_sysctl_result )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin-Initialize.cmake(42):  unset(_sysctl_stderr )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin-Initialize.cmake(43):  unset(_sysctl_stdout )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin-Initialize.cmake(48):  set(CMAKE_EFFECTIVE_SYSTEM_NAME Apple )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin-Initialize.cmake(53):  string(REGEX REPLACE ^([0-9]+\.[0-9]+).*$ \1 _CURRENT_OSX_VERSION 14.1.1 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin-Initialize.cmake(60):  if(CMAKE_SYSTEM_NAME STREQUAL Darwin AND _CURRENT_OSX_VERSION VERSION_GREATER 10.3 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin-Initialize.cmake(61):  set(CMAKE_OSX_DEPLOYMENT_TARGET  CACHE STRING Minimum OS X version to target for deployment (at runtime); newer APIs weak linked. Set to empty string for default value. )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin-Initialize.cmake(68):  if(CMAKE_OSX_SYSROOT )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin-Initialize.cmake(70):  set(_CMAKE_OSX_SYSROOT_DEFAULT /Library/Developer/CommandLineTools/SDKs/MacOSX14.0.sdk )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin-Initialize.cmake(129):  set(_CMAKE_OSX_SYSROOT_TYPE STRING )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin-Initialize.cmake(130):  foreach(_v CMAKE_OSX_SYSROOT _CMAKE_OSX_SYSROOT_DEFAULT )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin-Initialize.cmake(131):  if(x/Library/Developer/CommandLineTools/SDKs/MacOSX14.0.sdk MATCHES / )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin-Initialize.cmake(132):  set(_CMAKE_OSX_SYSROOT_TYPE PATH )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin-Initialize.cmake(133):  break()
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin-Initialize.cmake(136):  set(CMAKE_OSX_SYSROOT /Library/Developer/CommandLineTools/SDKs/MacOSX14.0.sdk CACHE PATH The product will be built against the headers and libraries located inside the indicated SDK. )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin-Initialize.cmake(140):  function(_apple_resolve_sdk_path sdk_name ret )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin-Initialize.cmake(151):  function(_apple_resolve_supported_archs_for_sdk_from_system_lib sdk_path ret ret_failed )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin-Initialize.cmake(232):  function(_apple_resolve_multi_arch_sysroots )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin-Initialize.cmake(298):  _apple_resolve_multi_arch_sysroots()
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin-Initialize.cmake(233):  if(DEFINED CMAKE_APPLE_ARCH_SYSROOTS )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin-Initialize.cmake(237):  list(LENGTH CMAKE_OSX_ARCHITECTURES _num_archs )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin-Initialize.cmake(238):  if(NOT ( _num_archs GREATER 1 ) )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin-Initialize.cmake(239):  return()
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin-Initialize.cmake(301):  set(_CMAKE_OSX_SYSROOT_PATH  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin-Initialize.cmake(302):  if(CMAKE_OSX_SYSROOT )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin-Initialize.cmake(303):  if(x/Library/Developer/CommandLineTools/SDKs/MacOSX14.0.sdk MATCHES / )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin-Initialize.cmake(305):  if(NOT IS_DIRECTORY /Library/Developer/CommandLineTools/SDKs/MacOSX14.0.sdk )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin-Initialize.cmake(310):  set(_CMAKE_OSX_SYSROOT_PATH /Library/Developer/CommandLineTools/SDKs/MacOSX14.0.sdk )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeSystemSpecificInitialize.cmake(36):  set(CMAKE_SYSTEM_SPECIFIC_INITIALIZE_LOADED 1 )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCCompiler.cmake(1):  set(CMAKE_C_COMPILER /usr/bin/clang )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCCompiler.cmake(2):  set(CMAKE_C_COMPILER_ARG1  )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCCompiler.cmake(3):  set(CMAKE_C_COMPILER_ID AppleClang )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCCompiler.cmake(4):  set(CMAKE_C_COMPILER_VERSION 15.0.0.15000040 )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCCompiler.cmake(5):  set(CMAKE_C_COMPILER_VERSION_INTERNAL  )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCCompiler.cmake(6):  set(CMAKE_C_COMPILER_WRAPPER  )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCCompiler.cmake(7):  set(CMAKE_C_STANDARD_COMPUTED_DEFAULT 17 )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCCompiler.cmake(8):  set(CMAKE_C_EXTENSIONS_COMPUTED_DEFAULT ON )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCCompiler.cmake(9):  set(CMAKE_C_COMPILE_FEATURES c_std_90;c_function_prototypes;c_std_99;c_restrict;c_variadic_macros;c_std_11;c_static_assert;c_std_17;c_std_23 )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCCompiler.cmake(10):  set(CMAKE_C90_COMPILE_FEATURES c_std_90;c_function_prototypes )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCCompiler.cmake(11):  set(CMAKE_C99_COMPILE_FEATURES c_std_99;c_restrict;c_variadic_macros )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCCompiler.cmake(12):  set(CMAKE_C11_COMPILE_FEATURES c_std_11;c_static_assert )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCCompiler.cmake(13):  set(CMAKE_C17_COMPILE_FEATURES c_std_17 )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCCompiler.cmake(14):  set(CMAKE_C23_COMPILE_FEATURES c_std_23 )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCCompiler.cmake(16):  set(CMAKE_C_PLATFORM_ID Darwin )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCCompiler.cmake(17):  set(CMAKE_C_SIMULATE_ID  )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCCompiler.cmake(18):  set(CMAKE_C_COMPILER_FRONTEND_VARIANT GNU )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCCompiler.cmake(19):  set(CMAKE_C_SIMULATE_VERSION  )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCCompiler.cmake(24):  set(CMAKE_AR /usr/bin/ar )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCCompiler.cmake(25):  set(CMAKE_C_COMPILER_AR  )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCCompiler.cmake(26):  set(CMAKE_RANLIB /usr/bin/ranlib )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCCompiler.cmake(27):  set(CMAKE_C_COMPILER_RANLIB  )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCCompiler.cmake(28):  set(CMAKE_LINKER /usr/bin/ld )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCCompiler.cmake(29):  set(CMAKE_MT  )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCCompiler.cmake(30):  set(CMAKE_TAPI /Library/Developer/CommandLineTools/usr/bin/tapi )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCCompiler.cmake(31):  set(CMAKE_COMPILER_IS_GNUCC )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCCompiler.cmake(32):  set(CMAKE_C_COMPILER_LOADED 1 )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCCompiler.cmake(33):  set(CMAKE_C_COMPILER_WORKS TRUE )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCCompiler.cmake(34):  set(CMAKE_C_ABI_COMPILED TRUE )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCCompiler.cmake(36):  set(CMAKE_C_COMPILER_ENV_VAR CC )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCCompiler.cmake(38):  set(CMAKE_C_COMPILER_ID_RUN 1 )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCCompiler.cmake(39):  set(CMAKE_C_SOURCE_FILE_EXTENSIONS c;m )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCCompiler.cmake(40):  set(CMAKE_C_IGNORE_EXTENSIONS h;H;o;O;obj;OBJ;def;DEF;rc;RC )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCCompiler.cmake(41):  set(CMAKE_C_LINKER_PREFERENCE 10 )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCCompiler.cmake(42):  set(CMAKE_C_LINKER_DEPFILE_SUPPORTED FALSE )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCCompiler.cmake(45):  set(CMAKE_C_SIZEOF_DATA_PTR 8 )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCCompiler.cmake(46):  set(CMAKE_C_COMPILER_ABI  )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCCompiler.cmake(47):  set(CMAKE_C_BYTE_ORDER LITTLE_ENDIAN )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCCompiler.cmake(48):  set(CMAKE_C_LIBRARY_ARCHITECTURE  )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCCompiler.cmake(50):  if(CMAKE_C_SIZEOF_DATA_PTR )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCCompiler.cmake(51):  set(CMAKE_SIZEOF_VOID_P 8 )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCCompiler.cmake(54):  if(CMAKE_C_COMPILER_ABI )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCCompiler.cmake(58):  if(CMAKE_C_LIBRARY_ARCHITECTURE )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCCompiler.cmake(62):  set(CMAKE_C_CL_SHOWINCLUDES_PREFIX  )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCCompiler.cmake(63):  if(CMAKE_C_CL_SHOWINCLUDES_PREFIX )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCCompiler.cmake(71):  set(CMAKE_C_IMPLICIT_INCLUDE_DIRECTORIES /Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/include;/Library/Developer/CommandLineTools/SDKs/MacOSX14.0.sdk/usr/include;/Library/Developer/CommandLineTools/usr/include )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCCompiler.cmake(72):  set(CMAKE_C_IMPLICIT_LINK_LIBRARIES  )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCCompiler.cmake(73):  set(CMAKE_C_IMPLICIT_LINK_DIRECTORIES  )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCCompiler.cmake(74):  set(CMAKE_C_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES  )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCXXCompiler.cmake(1):  set(CMAKE_CXX_COMPILER /usr/bin/clang++ )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCXXCompiler.cmake(2):  set(CMAKE_CXX_COMPILER_ARG1  )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCXXCompiler.cmake(3):  set(CMAKE_CXX_COMPILER_ID AppleClang )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCXXCompiler.cmake(4):  set(CMAKE_CXX_COMPILER_VERSION 15.0.0.15000040 )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCXXCompiler.cmake(5):  set(CMAKE_CXX_COMPILER_VERSION_INTERNAL  )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCXXCompiler.cmake(6):  set(CMAKE_CXX_COMPILER_WRAPPER  )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCXXCompiler.cmake(7):  set(CMAKE_CXX_STANDARD_COMPUTED_DEFAULT 98 )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCXXCompiler.cmake(8):  set(CMAKE_CXX_EXTENSIONS_COMPUTED_DEFAULT ON )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCXXCompiler.cmake(9):  set(CMAKE_CXX_COMPILE_FEATURES cxx_std_98;cxx_template_template_parameters;cxx_std_11;cxx_alias_templates;cxx_alignas;cxx_alignof;cxx_attributes;cxx_auto_type;cxx_constexpr;cxx_decltype;cxx_decltype_incomplete_return_types;cxx_default_function_template_args;cxx_defaulted_functions;cxx_defaulted_move_initializers;cxx_delegating_constructors;cxx_deleted_functions;cxx_enum_forward_declarations;cxx_explicit_conversions;cxx_extended_friend_declarations;cxx_extern_templates;cxx_final;cxx_func_identifier;cxx_generalized_initializers;cxx_inheriting_constructors;cxx_inline_namespaces;cxx_lambdas;cxx_local_type_template_args;cxx_long_long_type;cxx_noexcept;cxx_nonstatic_member_init;cxx_nullptr;cxx_override;cxx_range_for;cxx_raw_string_literals;cxx_reference_qualified_functions;cxx_right_angle_brackets;cxx_rvalue_references;cxx_sizeof_member;cxx_static_assert;cxx_strong_enums;cxx_thread_local;cxx_trailing_return_types;cxx_unicode_literals;cxx_uniform_initialization;cxx_unrestricted_unions;cxx_user_literals;cxx_variadic_macros;cxx_variadic_templates;cxx_std_14;cxx_aggregate_default_initializers;cxx_attribute_deprecated;cxx_binary_literals;cxx_contextual_conversions;cxx_decltype_auto;cxx_digit_separators;cxx_generic_lambdas;cxx_lambda_init_captures;cxx_relaxed_constexpr;cxx_return_type_deduction;cxx_variable_templates;cxx_std_17;cxx_std_20;cxx_std_23 )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCXXCompiler.cmake(10):  set(CMAKE_CXX98_COMPILE_FEATURES cxx_std_98;cxx_template_template_parameters )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCXXCompiler.cmake(11):  set(CMAKE_CXX11_COMPILE_FEATURES cxx_std_11;cxx_alias_templates;cxx_alignas;cxx_alignof;cxx_attributes;cxx_auto_type;cxx_constexpr;cxx_decltype;cxx_decltype_incomplete_return_types;cxx_default_function_template_args;cxx_defaulted_functions;cxx_defaulted_move_initializers;cxx_delegating_constructors;cxx_deleted_functions;cxx_enum_forward_declarations;cxx_explicit_conversions;cxx_extended_friend_declarations;cxx_extern_templates;cxx_final;cxx_func_identifier;cxx_generalized_initializers;cxx_inheriting_constructors;cxx_inline_namespaces;cxx_lambdas;cxx_local_type_template_args;cxx_long_long_type;cxx_noexcept;cxx_nonstatic_member_init;cxx_nullptr;cxx_override;cxx_range_for;cxx_raw_string_literals;cxx_reference_qualified_functions;cxx_right_angle_brackets;cxx_rvalue_references;cxx_sizeof_member;cxx_static_assert;cxx_strong_enums;cxx_thread_local;cxx_trailing_return_types;cxx_unicode_literals;cxx_uniform_initialization;cxx_unrestricted_unions;cxx_user_literals;cxx_variadic_macros;cxx_variadic_templates )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCXXCompiler.cmake(12):  set(CMAKE_CXX14_COMPILE_FEATURES cxx_std_14;cxx_aggregate_default_initializers;cxx_attribute_deprecated;cxx_binary_literals;cxx_contextual_conversions;cxx_decltype_auto;cxx_digit_separators;cxx_generic_lambdas;cxx_lambda_init_captures;cxx_relaxed_constexpr;cxx_return_type_deduction;cxx_variable_templates )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCXXCompiler.cmake(13):  set(CMAKE_CXX17_COMPILE_FEATURES cxx_std_17 )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCXXCompiler.cmake(14):  set(CMAKE_CXX20_COMPILE_FEATURES cxx_std_20 )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCXXCompiler.cmake(15):  set(CMAKE_CXX23_COMPILE_FEATURES cxx_std_23 )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCXXCompiler.cmake(17):  set(CMAKE_CXX_PLATFORM_ID Darwin )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCXXCompiler.cmake(18):  set(CMAKE_CXX_SIMULATE_ID  )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCXXCompiler.cmake(19):  set(CMAKE_CXX_COMPILER_FRONTEND_VARIANT GNU )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCXXCompiler.cmake(20):  set(CMAKE_CXX_SIMULATE_VERSION  )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCXXCompiler.cmake(25):  set(CMAKE_AR /usr/bin/ar )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCXXCompiler.cmake(26):  set(CMAKE_CXX_COMPILER_AR  )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCXXCompiler.cmake(27):  set(CMAKE_RANLIB /usr/bin/ranlib )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCXXCompiler.cmake(28):  set(CMAKE_CXX_COMPILER_RANLIB  )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCXXCompiler.cmake(29):  set(CMAKE_LINKER /usr/bin/ld )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCXXCompiler.cmake(30):  set(CMAKE_MT  )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCXXCompiler.cmake(31):  set(CMAKE_TAPI /Library/Developer/CommandLineTools/usr/bin/tapi )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCXXCompiler.cmake(32):  set(CMAKE_COMPILER_IS_GNUCXX )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCXXCompiler.cmake(33):  set(CMAKE_CXX_COMPILER_LOADED 1 )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCXXCompiler.cmake(34):  set(CMAKE_CXX_COMPILER_WORKS TRUE )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCXXCompiler.cmake(35):  set(CMAKE_CXX_ABI_COMPILED TRUE )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCXXCompiler.cmake(37):  set(CMAKE_CXX_COMPILER_ENV_VAR CXX )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCXXCompiler.cmake(39):  set(CMAKE_CXX_COMPILER_ID_RUN 1 )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCXXCompiler.cmake(40):  set(CMAKE_CXX_SOURCE_FILE_EXTENSIONS C;M;c++;cc;cpp;cxx;m;mm;mpp;CPP;ixx;cppm;ccm;cxxm;c++m )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCXXCompiler.cmake(41):  set(CMAKE_CXX_IGNORE_EXTENSIONS inl;h;hpp;HPP;H;o;O;obj;OBJ;def;DEF;rc;RC )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCXXCompiler.cmake(43):  foreach(lang C OBJC OBJCXX )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCXXCompiler.cmake(44):  if(CMAKE_C_COMPILER_ID_RUN )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCXXCompiler.cmake(45):  foreach(extension IN LISTS CMAKE_C_SOURCE_FILE_EXTENSIONS )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCXXCompiler.cmake(46):  list(REMOVE_ITEM CMAKE_CXX_SOURCE_FILE_EXTENSIONS c )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCXXCompiler.cmake(46):  list(REMOVE_ITEM CMAKE_CXX_SOURCE_FILE_EXTENSIONS m )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCXXCompiler.cmake(44):  if(CMAKE_OBJC_COMPILER_ID_RUN )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCXXCompiler.cmake(44):  if(CMAKE_OBJCXX_COMPILER_ID_RUN )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCXXCompiler.cmake(51):  set(CMAKE_CXX_LINKER_PREFERENCE 30 )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCXXCompiler.cmake(52):  set(CMAKE_CXX_LINKER_PREFERENCE_PROPAGATES 1 )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCXXCompiler.cmake(53):  set(CMAKE_CXX_LINKER_DEPFILE_SUPPORTED FALSE )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCXXCompiler.cmake(56):  set(CMAKE_CXX_SIZEOF_DATA_PTR 8 )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCXXCompiler.cmake(57):  set(CMAKE_CXX_COMPILER_ABI  )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCXXCompiler.cmake(58):  set(CMAKE_CXX_BYTE_ORDER LITTLE_ENDIAN )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCXXCompiler.cmake(59):  set(CMAKE_CXX_LIBRARY_ARCHITECTURE  )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCXXCompiler.cmake(61):  if(CMAKE_CXX_SIZEOF_DATA_PTR )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCXXCompiler.cmake(62):  set(CMAKE_SIZEOF_VOID_P 8 )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCXXCompiler.cmake(65):  if(CMAKE_CXX_COMPILER_ABI )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCXXCompiler.cmake(69):  if(CMAKE_CXX_LIBRARY_ARCHITECTURE )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCXXCompiler.cmake(73):  set(CMAKE_CXX_CL_SHOWINCLUDES_PREFIX  )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCXXCompiler.cmake(74):  if(CMAKE_CXX_CL_SHOWINCLUDES_PREFIX )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCXXCompiler.cmake(82):  set(CMAKE_CXX_IMPLICIT_INCLUDE_DIRECTORIES /Library/Developer/CommandLineTools/SDKs/MacOSX14.0.sdk/usr/include/c++/v1;/Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/include;/Library/Developer/CommandLineTools/SDKs/MacOSX14.0.sdk/usr/include;/Library/Developer/CommandLineTools/usr/include )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCXXCompiler.cmake(83):  set(CMAKE_CXX_IMPLICIT_LINK_LIBRARIES c++ )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCXXCompiler.cmake(84):  set(CMAKE_CXX_IMPLICIT_LINK_DIRECTORIES  )
/Users/D032227/dev/cpp/spcmake/build/CMakeFiles/3.27.8/CMakeCXXCompiler.cmake(85):  set(CMAKE_CXX_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeSystemSpecificInformation.cmake(9):  function(_cmake_record_install_prefix )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeSystemSpecificInformation.cmake(27):  include(CMakeGenericSystem )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeGenericSystem.cmake(4):  include(CMakeInitializeConfigs )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(4):  include_guard(GLOBAL )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(8):  function(cmake_initialize_per_config_variable _PREFIX _DOCSTRING )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeGenericSystem.cmake(6):  set(CMAKE_SHARED_LIBRARY_C_FLAGS  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeGenericSystem.cmake(7):  set(CMAKE_SHARED_LIBRARY_CREATE_C_FLAGS -shared )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeGenericSystem.cmake(8):  set(CMAKE_SHARED_LIBRARY_LINK_C_FLAGS  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeGenericSystem.cmake(9):  set(CMAKE_SHARED_LIBRARY_RUNTIME_C_FLAG  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeGenericSystem.cmake(10):  set(CMAKE_SHARED_LIBRARY_RUNTIME_C_FLAG_SEP  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeGenericSystem.cmake(11):  set(CMAKE_INCLUDE_FLAG_C -I )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeGenericSystem.cmake(12):  set(CMAKE_LIBRARY_PATH_FLAG -L )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeGenericSystem.cmake(13):  set(CMAKE_LIBRARY_PATH_TERMINATOR  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeGenericSystem.cmake(14):  set(CMAKE_LINK_LIBRARY_FLAG -l )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeGenericSystem.cmake(16):  set(CMAKE_LINK_LIBRARY_SUFFIX  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeGenericSystem.cmake(17):  set(CMAKE_STATIC_LIBRARY_PREFIX lib )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeGenericSystem.cmake(18):  set(CMAKE_STATIC_LIBRARY_SUFFIX .a )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeGenericSystem.cmake(19):  set(CMAKE_SHARED_LIBRARY_PREFIX lib )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeGenericSystem.cmake(20):  set(CMAKE_SHARED_LIBRARY_SUFFIX .so )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeGenericSystem.cmake(21):  set(CMAKE_EXECUTABLE_SUFFIX  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeGenericSystem.cmake(22):  set(CMAKE_DL_LIBS dl )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeGenericSystem.cmake(24):  set(CMAKE_FIND_LIBRARY_PREFIXES lib )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeGenericSystem.cmake(25):  set(CMAKE_FIND_LIBRARY_SUFFIXES .so .a )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeGenericSystem.cmake(31):  set(CMAKE_LINK_LIBRARY_USING_DEFAULT_SUPPORTED TRUE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeGenericSystem.cmake(33):  if(NOT DEFINED CMAKE_AUTOGEN_ORIGIN_DEPENDS )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeGenericSystem.cmake(34):  set(CMAKE_AUTOGEN_ORIGIN_DEPENDS ON )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeGenericSystem.cmake(36):  if(NOT DEFINED CMAKE_AUTOMOC_COMPILER_PREDEFINES )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeGenericSystem.cmake(37):  set(CMAKE_AUTOMOC_COMPILER_PREDEFINES ON )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeGenericSystem.cmake(39):  if(NOT DEFINED CMAKE_AUTOMOC_PATH_PREFIX )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeGenericSystem.cmake(40):  set(CMAKE_AUTOMOC_PATH_PREFIX OFF )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeGenericSystem.cmake(42):  if(NOT DEFINED CMAKE_AUTOMOC_MACRO_NAMES )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeGenericSystem.cmake(43):  set(CMAKE_AUTOMOC_MACRO_NAMES Q_OBJECT Q_GADGET Q_NAMESPACE Q_NAMESPACE_EXPORT )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeGenericSystem.cmake(47):  set_property(GLOBAL PROPERTY TARGET_SUPPORTS_SHARED_LIBS TRUE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeGenericSystem.cmake(49):  set(CMAKE_SKIP_RPATH NO CACHE BOOL If set, runtime paths are not added when using shared libraries. )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeGenericSystem.cmake(51):  set(CMAKE_SKIP_INSTALL_RPATH NO CACHE BOOL If set, runtime paths are not added when installing shared libraries, but are added when building. )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeGenericSystem.cmake(54):  set(CMAKE_VERBOSE_MAKEFILE FALSE CACHE BOOL If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo. )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeGenericSystem.cmake(56):  if(DEFINED ENV{CMAKE_COLOR_DIAGNOSTICS} AND NOT DEFINED CACHE{CMAKE_COLOR_DIAGNOSTICS} )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeGenericSystem.cmake(60):  if(CMAKE_GENERATOR MATCHES Make )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeGenericSystem.cmake(61):  if(NOT DEFINED CMAKE_COLOR_DIAGNOSTICS )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeGenericSystem.cmake(62):  set(CMAKE_COLOR_MAKEFILE ON CACHE BOOL Enable/Disable color output during build. )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeGenericSystem.cmake(64):  mark_as_advanced(CMAKE_COLOR_MAKEFILE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeGenericSystem.cmake(66):  if(DEFINED CMAKE_RULE_MESSAGES )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeGenericSystem.cmake(69):  if(DEFINED CMAKE_TARGET_MESSAGES )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeGenericSystem.cmake(74):  if(NOT DEFINED CMAKE_EXPORT_COMPILE_COMMANDS AND CMAKE_GENERATOR MATCHES Ninja|Unix Makefiles )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeGenericSystem.cmake(88):  function(GetDefaultWindowsPrefixBase var )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeGenericSystem.cmake(180):  if(NOT DEFINED CMAKE_INSTALL_PREFIX )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeGenericSystem.cmake(185):  if(CMAKE_HOST_UNIX )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeGenericSystem.cmake(186):  set(CMAKE_INSTALL_PREFIX /usr/local CACHE PATH Install path prefix, prepended onto install directories. )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeGenericSystem.cmake(198):  set(CMAKE_INSTALL_DEFAULT_COMPONENT_NAME Unspecified )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeGenericSystem.cmake(200):  mark_as_advanced(CMAKE_SKIP_RPATH CMAKE_SKIP_INSTALL_RPATH CMAKE_VERBOSE_MAKEFILE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeSystemSpecificInformation.cmake(30):  set(CMAKE_SYSTEM_INFO_FILE Platform/Darwin )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeSystemSpecificInformation.cmake(32):  include(Platform/Darwin OPTIONAL RESULT_VARIABLE _INCLUDED_SYSTEM_INFO_FILE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(1):  if(CMAKE_SYSTEM_NAME STREQUAL iOS OR CMAKE_SYSTEM_NAME STREQUAL tvOS OR CMAKE_SYSTEM_NAME STREQUAL watchOS )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(26):  string(REGEX REPLACE ^([0-9]+)\.([0-9]+).*$ \1 DARWIN_MAJOR_VERSION 23.1.0 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(27):  string(REGEX REPLACE ^([0-9]+)\.([0-9]+).*$ \2 DARWIN_MINOR_VERSION 23.1.0 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(31):  if(NOT DEFINED HAVE_FLAG_SEARCH_PATHS_FIRST )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(32):  set(HAVE_FLAG_SEARCH_PATHS_FIRST 0 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(33):  if(23 GREATER 6 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(34):  set(HAVE_FLAG_SEARCH_PATHS_FIRST 1 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(41):  set(CMAKE_SHARED_LIBRARY_PREFIX lib )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(42):  set(CMAKE_SHARED_LIBRARY_SUFFIX .dylib )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(43):  set(CMAKE_EXTRA_SHARED_LIBRARY_SUFFIXES .tbd .so )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(44):  set(CMAKE_SHARED_MODULE_PREFIX lib )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(45):  set(CMAKE_SHARED_MODULE_SUFFIX .so )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(46):  set(CMAKE_APPLE_IMPORT_FILE_PREFIX lib )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(47):  set(CMAKE_APPLE_IMPORT_FILE_SUFFIX .tbd )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(48):  set(CMAKE_MODULE_EXISTS 1 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(49):  set(CMAKE_DL_LIBS  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(50):  if(NOT 14.1 VERSION_LESS 10.5 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(51):  set(CMAKE_SHARED_LIBRARY_RUNTIME_C_FLAG -Wl,-rpath, )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(54):  foreach(lang C CXX OBJC OBJCXX )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(55):  set(CMAKE_C_OSX_COMPATIBILITY_VERSION_FLAG -compatibility_version  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(56):  set(CMAKE_C_OSX_CURRENT_VERSION_FLAG -current_version  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(57):  set(CMAKE_C_LINK_FLAGS -Wl,-headerpad_max_install_names )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(59):  if(HAVE_FLAG_SEARCH_PATHS_FIRST )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(60):  set(CMAKE_C_LINK_FLAGS -Wl,-search_paths_first -Wl,-headerpad_max_install_names )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(63):  set(CMAKE_SHARED_LIBRARY_CREATE_C_FLAGS -dynamiclib -Wl,-headerpad_max_install_names )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(64):  set(CMAKE_SHARED_MODULE_CREATE_C_FLAGS -bundle -Wl,-headerpad_max_install_names )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(65):  set(CMAKE_SHARED_MODULE_LOADER_C_FLAG -Wl,-bundle_loader, )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(55):  set(CMAKE_CXX_OSX_COMPATIBILITY_VERSION_FLAG -compatibility_version  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(56):  set(CMAKE_CXX_OSX_CURRENT_VERSION_FLAG -current_version  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(57):  set(CMAKE_CXX_LINK_FLAGS -Wl,-headerpad_max_install_names )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(59):  if(HAVE_FLAG_SEARCH_PATHS_FIRST )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(60):  set(CMAKE_CXX_LINK_FLAGS -Wl,-search_paths_first -Wl,-headerpad_max_install_names )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(63):  set(CMAKE_SHARED_LIBRARY_CREATE_CXX_FLAGS -dynamiclib -Wl,-headerpad_max_install_names )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(64):  set(CMAKE_SHARED_MODULE_CREATE_CXX_FLAGS -bundle -Wl,-headerpad_max_install_names )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(65):  set(CMAKE_SHARED_MODULE_LOADER_CXX_FLAG -Wl,-bundle_loader, )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(55):  set(CMAKE_OBJC_OSX_COMPATIBILITY_VERSION_FLAG -compatibility_version  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(56):  set(CMAKE_OBJC_OSX_CURRENT_VERSION_FLAG -current_version  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(57):  set(CMAKE_OBJC_LINK_FLAGS -Wl,-headerpad_max_install_names )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(59):  if(HAVE_FLAG_SEARCH_PATHS_FIRST )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(60):  set(CMAKE_OBJC_LINK_FLAGS -Wl,-search_paths_first -Wl,-headerpad_max_install_names )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(63):  set(CMAKE_SHARED_LIBRARY_CREATE_OBJC_FLAGS -dynamiclib -Wl,-headerpad_max_install_names )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(64):  set(CMAKE_SHARED_MODULE_CREATE_OBJC_FLAGS -bundle -Wl,-headerpad_max_install_names )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(65):  set(CMAKE_SHARED_MODULE_LOADER_OBJC_FLAG -Wl,-bundle_loader, )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(55):  set(CMAKE_OBJCXX_OSX_COMPATIBILITY_VERSION_FLAG -compatibility_version  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(56):  set(CMAKE_OBJCXX_OSX_CURRENT_VERSION_FLAG -current_version  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(57):  set(CMAKE_OBJCXX_LINK_FLAGS -Wl,-headerpad_max_install_names )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(59):  if(HAVE_FLAG_SEARCH_PATHS_FIRST )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(60):  set(CMAKE_OBJCXX_LINK_FLAGS -Wl,-search_paths_first -Wl,-headerpad_max_install_names )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(63):  set(CMAKE_SHARED_LIBRARY_CREATE_OBJCXX_FLAGS -dynamiclib -Wl,-headerpad_max_install_names )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(64):  set(CMAKE_SHARED_MODULE_CREATE_OBJCXX_FLAGS -bundle -Wl,-headerpad_max_install_names )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(65):  set(CMAKE_SHARED_MODULE_LOADER_OBJCXX_FLAG -Wl,-bundle_loader, )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(68):  set(CMAKE_PLATFORM_HAS_INSTALLNAME 1 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(69):  set(CMAKE_FIND_LIBRARY_SUFFIXES .tbd .dylib .so .a )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(75):  if(NOT DEFINED CMAKE_INSTALL_NAME_TOOL )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(81):  set(CMAKE_SHARED_LIBRARY_SONAME_C_FLAG -install_name )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(83):  if(14.1 VERSION_LESS 10.5 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(91):  foreach(lang C CXX Fortran OBJC OBJCXX )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(93):  if(XCODE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(97):  set(CMAKE_C_CREATE_SHARED_LIBRARY <CMAKE_C_COMPILER> <LANGUAGE_COMPILE_FLAGS> <CMAKE_SHARED_LIBRARY_CREATE_C_FLAGS> <LINK_FLAGS> -o <TARGET> <SONAME_FLAG> <TARGET_INSTALLNAME_DIR><TARGET_SONAME> <OBJECTS> <LINK_LIBRARIES> )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(100):  set(CMAKE_C_CREATE_SHARED_MODULE <CMAKE_C_COMPILER> <LANGUAGE_COMPILE_FLAGS> <CMAKE_SHARED_MODULE_CREATE_C_FLAGS> <LINK_FLAGS> -o <TARGET> <OBJECTS> <LINK_LIBRARIES> )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(103):  set(CMAKE_C_CREATE_MACOSX_FRAMEWORK <CMAKE_C_COMPILER> <LANGUAGE_COMPILE_FLAGS> <CMAKE_SHARED_LIBRARY_CREATE_C_FLAGS> <LINK_FLAGS> -o <TARGET> <SONAME_FLAG> <TARGET_INSTALLNAME_DIR><TARGET_SONAME> <OBJECTS> <LINK_LIBRARIES> )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(108):  set(CMAKE_C_FRAMEWORK_SEARCH_FLAG -F )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(93):  if(XCODE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(97):  set(CMAKE_CXX_CREATE_SHARED_LIBRARY <CMAKE_CXX_COMPILER> <LANGUAGE_COMPILE_FLAGS> <CMAKE_SHARED_LIBRARY_CREATE_CXX_FLAGS> <LINK_FLAGS> -o <TARGET> <SONAME_FLAG> <TARGET_INSTALLNAME_DIR><TARGET_SONAME> <OBJECTS> <LINK_LIBRARIES> )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(100):  set(CMAKE_CXX_CREATE_SHARED_MODULE <CMAKE_CXX_COMPILER> <LANGUAGE_COMPILE_FLAGS> <CMAKE_SHARED_MODULE_CREATE_CXX_FLAGS> <LINK_FLAGS> -o <TARGET> <OBJECTS> <LINK_LIBRARIES> )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(103):  set(CMAKE_CXX_CREATE_MACOSX_FRAMEWORK <CMAKE_CXX_COMPILER> <LANGUAGE_COMPILE_FLAGS> <CMAKE_SHARED_LIBRARY_CREATE_CXX_FLAGS> <LINK_FLAGS> -o <TARGET> <SONAME_FLAG> <TARGET_INSTALLNAME_DIR><TARGET_SONAME> <OBJECTS> <LINK_LIBRARIES> )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(108):  set(CMAKE_CXX_FRAMEWORK_SEARCH_FLAG -F )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(93):  if(XCODE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(97):  set(CMAKE_Fortran_CREATE_SHARED_LIBRARY <CMAKE_Fortran_COMPILER> <LANGUAGE_COMPILE_FLAGS> <CMAKE_SHARED_LIBRARY_CREATE_Fortran_FLAGS> <LINK_FLAGS> -o <TARGET> <SONAME_FLAG> <TARGET_INSTALLNAME_DIR><TARGET_SONAME> <OBJECTS> <LINK_LIBRARIES> )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(100):  set(CMAKE_Fortran_CREATE_SHARED_MODULE <CMAKE_Fortran_COMPILER> <LANGUAGE_COMPILE_FLAGS> <CMAKE_SHARED_MODULE_CREATE_Fortran_FLAGS> <LINK_FLAGS> -o <TARGET> <OBJECTS> <LINK_LIBRARIES> )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(103):  set(CMAKE_Fortran_CREATE_MACOSX_FRAMEWORK <CMAKE_Fortran_COMPILER> <LANGUAGE_COMPILE_FLAGS> <CMAKE_SHARED_LIBRARY_CREATE_Fortran_FLAGS> <LINK_FLAGS> -o <TARGET> <SONAME_FLAG> <TARGET_INSTALLNAME_DIR><TARGET_SONAME> <OBJECTS> <LINK_LIBRARIES> )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(108):  set(CMAKE_Fortran_FRAMEWORK_SEARCH_FLAG -F )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(93):  if(XCODE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(97):  set(CMAKE_OBJC_CREATE_SHARED_LIBRARY <CMAKE_OBJC_COMPILER> <LANGUAGE_COMPILE_FLAGS> <CMAKE_SHARED_LIBRARY_CREATE_OBJC_FLAGS> <LINK_FLAGS> -o <TARGET> <SONAME_FLAG> <TARGET_INSTALLNAME_DIR><TARGET_SONAME> <OBJECTS> <LINK_LIBRARIES> )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(100):  set(CMAKE_OBJC_CREATE_SHARED_MODULE <CMAKE_OBJC_COMPILER> <LANGUAGE_COMPILE_FLAGS> <CMAKE_SHARED_MODULE_CREATE_OBJC_FLAGS> <LINK_FLAGS> -o <TARGET> <OBJECTS> <LINK_LIBRARIES> )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(103):  set(CMAKE_OBJC_CREATE_MACOSX_FRAMEWORK <CMAKE_OBJC_COMPILER> <LANGUAGE_COMPILE_FLAGS> <CMAKE_SHARED_LIBRARY_CREATE_OBJC_FLAGS> <LINK_FLAGS> -o <TARGET> <SONAME_FLAG> <TARGET_INSTALLNAME_DIR><TARGET_SONAME> <OBJECTS> <LINK_LIBRARIES> )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(108):  set(CMAKE_OBJC_FRAMEWORK_SEARCH_FLAG -F )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(93):  if(XCODE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(97):  set(CMAKE_OBJCXX_CREATE_SHARED_LIBRARY <CMAKE_OBJCXX_COMPILER> <LANGUAGE_COMPILE_FLAGS> <CMAKE_SHARED_LIBRARY_CREATE_OBJCXX_FLAGS> <LINK_FLAGS> -o <TARGET> <SONAME_FLAG> <TARGET_INSTALLNAME_DIR><TARGET_SONAME> <OBJECTS> <LINK_LIBRARIES> )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(100):  set(CMAKE_OBJCXX_CREATE_SHARED_MODULE <CMAKE_OBJCXX_COMPILER> <LANGUAGE_COMPILE_FLAGS> <CMAKE_SHARED_MODULE_CREATE_OBJCXX_FLAGS> <LINK_FLAGS> -o <TARGET> <OBJECTS> <LINK_LIBRARIES> )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(103):  set(CMAKE_OBJCXX_CREATE_MACOSX_FRAMEWORK <CMAKE_OBJCXX_COMPILER> <LANGUAGE_COMPILE_FLAGS> <CMAKE_SHARED_LIBRARY_CREATE_OBJCXX_FLAGS> <LINK_FLAGS> -o <TARGET> <SONAME_FLAG> <TARGET_INSTALLNAME_DIR><TARGET_SONAME> <OBJECTS> <LINK_LIBRARIES> )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(108):  set(CMAKE_OBJCXX_FRAMEWORK_SEARCH_FLAG -F )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(112):  set(CMAKE_CREATE_TEXT_STUBS <CMAKE_TAPI> stubify -isysroot <CMAKE_OSX_SYSROOT> -o <TARGET_IMPLIB> <TARGET> )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(115):  set(CMAKE_LINK_LIBRARY_USING_FRAMEWORK LINKER:-framework,<LIBRARY> )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(116):  set(CMAKE_LINK_LIBRARY_USING_FRAMEWORK_SUPPORTED TRUE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(118):  set(CMAKE_LINK_LIBRARY_USING_NEEDED_FRAMEWORK LINKER:-needed_framework,<LIBRARY> )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(119):  set(CMAKE_LINK_LIBRARY_USING_NEEDED_FRAMEWORK_SUPPORTED TRUE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(121):  set(CMAKE_LINK_LIBRARY_USING_REEXPORT_FRAMEWORK LINKER:-reexport_framework,<LIBRARY> )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(122):  set(CMAKE_LINK_LIBRARY_USING_REEXPORT_FRAMEWORK_SUPPORTED TRUE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(124):  set(CMAKE_LINK_LIBRARY_USING_WEAK_FRAMEWORK LINKER:-weak_framework,<LIBRARY> )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(125):  set(CMAKE_LINK_LIBRARY_USING_WEAK_FRAMEWORK_SUPPORTED TRUE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(128):  set(CMAKE_LINK_LIBRARY_USING_NEEDED_LIBRARY PATH{LINKER:-needed_library <LIBRARY>}NAME{LINKER:-needed-l<LIBRARY>} )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(129):  set(CMAKE_LINK_LIBRARY_USING_NEEDED_LIBRARY_SUPPORTED TRUE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(131):  set(CMAKE_LINK_LIBRARY_USING_REEXPORT_LIBRARY PATH{LINKER:-reexport_library <LIBRARY>}NAME{LINKER:-reexport-l<LIBRARY>} )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(132):  set(CMAKE_LINK_LIBRARY_USING_REEXPORT_LIBRARY_SUPPORTED TRUE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(134):  set(CMAKE_LINK_LIBRARY_USING_WEAK_LIBRARY PATH{LINKER:-weak_library <LIBRARY>}NAME{LINKER:-weak-l<LIBRARY>} )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(135):  set(CMAKE_LINK_LIBRARY_USING_WEAK_LIBRARY_SUPPORTED TRUE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(138):  set(CMAKE_LINK_LIBRARY_USING_WHOLE_ARCHIVE LINKER:-force_load <LIB_ITEM> )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(139):  set(CMAKE_LINK_LIBRARY_USING_WHOLE_ARCHIVE_SUPPORTED TRUE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(142):  if(NOT DEFINED CMAKE_FIND_FRAMEWORK )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(143):  set(CMAKE_FIND_FRAMEWORK FIRST )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(148):  set(CMAKE_PLATFORM_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES /Library/Developer/CommandLineTools/SDKs/MacOSX14.0.sdk/Library/Frameworks /Library/Developer/CommandLineTools/SDKs/MacOSX14.0.sdk/System/Library/Frameworks )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(152):  if(_CMAKE_OSX_SYSROOT_PATH )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(154):  list(APPEND CMAKE_PLATFORM_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES /System/Library/Frameworks )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(157):  if(14.1 VERSION_LESS 10.5 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(164):  set(CMAKE_SYSTEM_FRAMEWORK_PATH ~/Library/Frameworks )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(167):  if(_CMAKE_OSX_SYSROOT_PATH )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(168):  list(APPEND CMAKE_SYSTEM_FRAMEWORK_PATH /Library/Developer/CommandLineTools/SDKs/MacOSX14.0.sdk/Library/Frameworks /Library/Developer/CommandLineTools/SDKs/MacOSX14.0.sdk/Network/Library/Frameworks /Library/Developer/CommandLineTools/SDKs/MacOSX14.0.sdk/System/Library/Frameworks )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(174):  foreach(_path /Library/Developer/CommandLineTools/SDKs/MacOSX14.0.sdk/../../Library/Frameworks /Library/Developer/CommandLineTools/SDKs/MacOSX14.0.sdk/Developer/Library/Frameworks /Library/Developer/CommandLineTools/SDKs/MacOSX14.0.sdk/../../../../../Library/Frameworks )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(182):  get_filename_component(_abolute_path /Library/Developer/CommandLineTools/SDKs/MacOSX14.0.sdk/../../Library/Frameworks ABSOLUTE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(183):  if(EXISTS /Library/Developer/CommandLineTools/Library/Frameworks )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(184):  list(APPEND CMAKE_SYSTEM_FRAMEWORK_PATH /Library/Developer/CommandLineTools/Library/Frameworks )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(185):  break()
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(189):  if(EXISTS /Library/Developer/CommandLineTools/SDKs/MacOSX14.0.sdk/usr/lib )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(190):  list(INSERT CMAKE_PLATFORM_IMPLICIT_LINK_DIRECTORIES 0 /Library/Developer/CommandLineTools/SDKs/MacOSX14.0.sdk/usr/lib )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(192):  if(EXISTS /Library/Developer/CommandLineTools/SDKs/MacOSX14.0.sdk/usr/local/lib )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(196):  if(OSX_DEVELOPER_ROOT AND EXISTS /Library/Developer/CommandLineTools/Library/Frameworks )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(197):  list(APPEND CMAKE_SYSTEM_FRAMEWORK_PATH /Library/Developer/CommandLineTools/Library/Frameworks )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(200):  list(APPEND CMAKE_SYSTEM_FRAMEWORK_PATH /Library/Frameworks /Network/Library/Frameworks /System/Library/Frameworks )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(206):  if(CMAKE_OSX_SYSROOT )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(207):  get_property(_IN_TC GLOBAL PROPERTY IN_TRY_COMPILE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(208):  if(NOT _IN_TC AND NOT IS_SYMLINK /Library/Developer/CommandLineTools/SDKs/MacOSX14.0.sdk/Library/Frameworks AND IS_SYMLINK /Library/Developer/CommandLineTools/SDKs/MacOSX14.0.sdk/Library/Frameworks/Frameworks )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(223):  if(NOT DEFINED CMAKE_FIND_APPBUNDLE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(224):  set(CMAKE_FIND_APPBUNDLE FIRST )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(227):  set(_apps_paths )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(228):  foreach(_path ~/Applications /Applications /Library/Developer/CommandLineTools/../Applications /Library/Developer/CommandLineTools/Applications )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(234):  get_filename_component(_apps ~/Applications ABSOLUTE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(235):  if(EXISTS /Users/D032227/Applications )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(234):  get_filename_component(_apps /Applications ABSOLUTE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(235):  if(EXISTS /Applications )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(236):  list(APPEND _apps_paths /Applications )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(234):  get_filename_component(_apps /Library/Developer/CommandLineTools/../Applications ABSOLUTE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(235):  if(EXISTS /Library/Developer/Applications )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(234):  get_filename_component(_apps /Library/Developer/CommandLineTools/Applications ABSOLUTE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(235):  if(EXISTS /Library/Developer/CommandLineTools/Applications )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(239):  if(_apps_paths )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(240):  list(REMOVE_DUPLICATES _apps_paths )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(242):  set(CMAKE_SYSTEM_APPBUNDLE_PATH /Applications )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(244):  unset(_apps_paths )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(246):  include(Platform/UnixPaths )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/UnixPaths.cmake(10):  if(__UNIX_PATHS_INCLUDED )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/UnixPaths.cmake(13):  set(__UNIX_PATHS_INCLUDED 1 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/UnixPaths.cmake(18):  set(UNIX 1 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/UnixPaths.cmake(22):  get_filename_component(_CMAKE_INSTALL_DIR /opt/homebrew/Cellar/cmake/3.27.8/share/cmake PATH )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/UnixPaths.cmake(23):  get_filename_component(_CMAKE_INSTALL_DIR /opt/homebrew/Cellar/cmake/3.27.8/share PATH )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/UnixPaths.cmake(31):  list(APPEND CMAKE_SYSTEM_PREFIX_PATH /usr/local /usr / /opt/homebrew/Cellar/cmake/3.27.8 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/UnixPaths.cmake(38):  if(NOT CMAKE_FIND_NO_INSTALL_PREFIX )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/UnixPaths.cmake(39):  list(APPEND CMAKE_SYSTEM_PREFIX_PATH /usr/local )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/UnixPaths.cmake(43):  if(CMAKE_STAGING_PREFIX )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/UnixPaths.cmake(50):  _cmake_record_install_prefix()
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeSystemSpecificInformation.cmake(10):  set(_CMAKE_SYSTEM_PREFIX_PATH_INSTALL_PREFIX_VALUE /usr/local PARENT_SCOPE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeSystemSpecificInformation.cmake(11):  set(_CMAKE_SYSTEM_PREFIX_PATH_STAGING_PREFIX_VALUE  PARENT_SCOPE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeSystemSpecificInformation.cmake(12):  set(icount 0 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeSystemSpecificInformation.cmake(13):  set(scount 0 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeSystemSpecificInformation.cmake(14):  foreach(value IN LISTS CMAKE_SYSTEM_PREFIX_PATH )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeSystemSpecificInformation.cmake(15):  if(value STREQUAL CMAKE_INSTALL_PREFIX )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeSystemSpecificInformation.cmake(16):  math(EXPR icount 0+1 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeSystemSpecificInformation.cmake(18):  if(value STREQUAL CMAKE_STAGING_PREFIX )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeSystemSpecificInformation.cmake(15):  if(value STREQUAL CMAKE_INSTALL_PREFIX )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeSystemSpecificInformation.cmake(18):  if(value STREQUAL CMAKE_STAGING_PREFIX )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeSystemSpecificInformation.cmake(15):  if(value STREQUAL CMAKE_INSTALL_PREFIX )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeSystemSpecificInformation.cmake(18):  if(value STREQUAL CMAKE_STAGING_PREFIX )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeSystemSpecificInformation.cmake(15):  if(value STREQUAL CMAKE_INSTALL_PREFIX )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeSystemSpecificInformation.cmake(18):  if(value STREQUAL CMAKE_STAGING_PREFIX )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeSystemSpecificInformation.cmake(15):  if(value STREQUAL CMAKE_INSTALL_PREFIX )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeSystemSpecificInformation.cmake(16):  math(EXPR icount 1+1 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeSystemSpecificInformation.cmake(18):  if(value STREQUAL CMAKE_STAGING_PREFIX )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeSystemSpecificInformation.cmake(22):  set(_CMAKE_SYSTEM_PREFIX_PATH_INSTALL_PREFIX_COUNT 2 PARENT_SCOPE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeSystemSpecificInformation.cmake(23):  set(_CMAKE_SYSTEM_PREFIX_PATH_STAGING_PREFIX_COUNT 0 PARENT_SCOPE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/UnixPaths.cmake(53):  list(APPEND CMAKE_SYSTEM_PREFIX_PATH /usr/X11R6 /usr/pkg /opt )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/UnixPaths.cmake(60):  list(APPEND CMAKE_SYSTEM_INCLUDE_PATH /usr/include/X11 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/UnixPaths.cmake(65):  list(APPEND CMAKE_SYSTEM_LIBRARY_PATH /usr/lib/X11 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/UnixPaths.cmake(70):  list(APPEND CMAKE_PLATFORM_IMPLICIT_LINK_DIRECTORIES /lib /lib32 /lib64 /usr/lib /usr/lib32 /usr/lib64 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/UnixPaths.cmake(74):  if(CMAKE_SYSROOT_COMPILE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/UnixPaths.cmake(76):  else()
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/UnixPaths.cmake(77):  set(_cmake_sysroot_compile  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/UnixPaths.cmake(82):  set(_CMAKE_C_IMPLICIT_INCLUDE_DIRECTORIES_INIT /Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/include;/Library/Developer/CommandLineTools/SDKs/MacOSX14.0.sdk/usr/include;/Library/Developer/CommandLineTools/usr/include /usr/include )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/UnixPaths.cmake(86):  set(_CMAKE_CXX_IMPLICIT_INCLUDE_DIRECTORIES_INIT /Library/Developer/CommandLineTools/SDKs/MacOSX14.0.sdk/usr/include/c++/v1;/Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/include;/Library/Developer/CommandLineTools/SDKs/MacOSX14.0.sdk/usr/include;/Library/Developer/CommandLineTools/usr/include /usr/include )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/UnixPaths.cmake(90):  set(_CMAKE_CUDA_IMPLICIT_INCLUDE_DIRECTORIES_INIT  /usr/include )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/UnixPaths.cmake(95):  unset(_cmake_sysroot_compile )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/UnixPaths.cmake(100):  if(CMAKE_COMPILER_SYSROOT )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/UnixPaths.cmake(109):  set_property(GLOBAL PROPERTY FIND_LIBRARY_USE_LIB32_PATHS TRUE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/UnixPaths.cmake(110):  set_property(GLOBAL PROPERTY FIND_LIBRARY_USE_LIB64_PATHS TRUE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/UnixPaths.cmake(111):  set_property(GLOBAL PROPERTY FIND_LIBRARY_USE_LIBX32_PATHS TRUE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(248):  if(CMAKE_SYSTEM_NAME STREQUAL Darwin AND CMAKE_SYSTEM_PROCESSOR STREQUAL arm64 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(249):  list(PREPEND CMAKE_SYSTEM_PREFIX_PATH /opt/homebrew )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(254):  if(_CMAKE_OSX_SYSROOT_PATH )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(255):  if(EXISTS /Library/Developer/CommandLineTools/SDKs/MacOSX14.0.sdk/usr/include )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(256):  list(INSERT CMAKE_SYSTEM_PREFIX_PATH 0 /Library/Developer/CommandLineTools/SDKs/MacOSX14.0.sdk/usr )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(257):  foreach(lang C CXX OBJC OBJCXX Swift )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(258):  list(APPEND _CMAKE_C_IMPLICIT_INCLUDE_DIRECTORIES_INIT /Library/Developer/CommandLineTools/SDKs/MacOSX14.0.sdk/usr/include )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(258):  list(APPEND _CMAKE_CXX_IMPLICIT_INCLUDE_DIRECTORIES_INIT /Library/Developer/CommandLineTools/SDKs/MacOSX14.0.sdk/usr/include )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(258):  list(APPEND _CMAKE_OBJC_IMPLICIT_INCLUDE_DIRECTORIES_INIT /Library/Developer/CommandLineTools/SDKs/MacOSX14.0.sdk/usr/include )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(258):  list(APPEND _CMAKE_OBJCXX_IMPLICIT_INCLUDE_DIRECTORIES_INIT /Library/Developer/CommandLineTools/SDKs/MacOSX14.0.sdk/usr/include )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(258):  list(APPEND _CMAKE_Swift_IMPLICIT_INCLUDE_DIRECTORIES_INIT /Library/Developer/CommandLineTools/SDKs/MacOSX14.0.sdk/usr/include )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(261):  if(EXISTS /Library/Developer/CommandLineTools/SDKs/MacOSX14.0.sdk/usr/local/include )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Darwin.cmake(268):  list(APPEND CMAKE_SYSTEM_PREFIX_PATH /sw /opt/local )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeSystemSpecificInformation.cmake(34):  if(NOT _INCLUDED_SYSTEM_INFO_FILE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeSystemSpecificInformation.cmake(48):  if(CMAKE_EXTRA_GENERATOR )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeSystemSpecificInformation.cmake(58):  if(NOT CMAKE_MODULE_EXISTS )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeSystemSpecificInformation.cmake(64):  set(CMAKE_SYSTEM_SPECIFIC_INFORMATION_LOADED 1 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCInformation.cmake(11):  include(CMakeLanguageInformation )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeLanguageInformation.cmake(9):  macro(__cmake_include_compiler_wrapper lang )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCInformation.cmake(15):  if(UNIX )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCInformation.cmake(16):  set(CMAKE_C_OUTPUT_EXTENSION .o )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCInformation.cmake(21):  set(_INCLUDED_FILE 0 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCInformation.cmake(24):  if(CMAKE_C_COMPILER_ID )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCInformation.cmake(25):  include(Compiler/AppleClang-C OPTIONAL )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/AppleClang-C.cmake(1):  include(Compiler/Clang )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/Clang.cmake(6):  if(__COMPILER_CLANG )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/Clang.cmake(9):  set(__COMPILER_CLANG 1 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/Clang.cmake(11):  include(Compiler/CMakeCommonCompilerMacros )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake(5):  if(__COMPILER_CMAKE_COMMON_COMPILER_MACROS )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake(8):  set(__COMPILER_CMAKE_COMMON_COMPILER_MACROS 1 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake(32):  macro(__compiler_check_default_language_standard lang stdver1 std1 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake(71):  macro(cmake_record_c_compile_features )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake(106):  macro(cmake_record_cxx_compile_features )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake(143):  macro(cmake_record_cuda_compile_features )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake(180):  macro(cmake_record_hip_compile_features )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/Clang.cmake(13):  set(__pch_header_C c-header )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/Clang.cmake(14):  set(__pch_header_CXX c++-header )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/Clang.cmake(15):  set(__pch_header_OBJC objective-c-header )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/Clang.cmake(16):  set(__pch_header_OBJCXX objective-c++-header )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/Clang.cmake(18):  if(x STREQUAL xMSVC OR x STREQUAL xMSVC OR x STREQUAL xMSVC )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/Clang.cmake(23):  else()
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/Clang.cmake(24):  include(Compiler/GNU )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(6):  if(__COMPILER_GNU )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(9):  set(__COMPILER_GNU 1 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(11):  include(Compiler/CMakeCommonCompilerMacros )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake(5):  if(__COMPILER_CMAKE_COMMON_COMPILER_MACROS )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake(6):  return()
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(13):  set(__pch_header_C c-header )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(14):  set(__pch_header_CXX c++-header )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(15):  set(__pch_header_OBJC objective-c-header )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(16):  set(__pch_header_OBJCXX objective-c++-header )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(18):  macro(__compiler_gnu lang )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/Clang.cmake(26):  macro(__compiler_clang lang )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/Clang.cmake(126):  macro(__compiler_clang_cxx_standards lang )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/AppleClang-C.cmake(2):  __compiler_clang(C )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/Clang.cmake(27):  __compiler_gnu(C )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(20):  set(CMAKE_C_VERBOSE_FLAG -v )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(21):  set(CMAKE_C_COMPILE_OPTIONS_WARNING_AS_ERROR -Werror )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(22):  set(CMAKE_C_COMPILE_OPTIONS_PIC -fPIC )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(23):  set(_CMAKE_C_PIE_MAY_BE_SUPPORTED_BY_LINKER NO )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(24):  if(NOT CMAKE_C_COMPILER_VERSION VERSION_LESS 3.4 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(25):  set(CMAKE_C_COMPILE_OPTIONS_PIE -fPIE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(28):  set(_CMAKE_C_PIE_MAY_BE_SUPPORTED_BY_LINKER YES )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(29):  set(CMAKE_C_LINK_OPTIONS_PIE -fPIE -pie )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(30):  set(CMAKE_C_LINK_OPTIONS_NO_PIE -no-pie )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(32):  if(NOT CMAKE_C_COMPILER_VERSION VERSION_LESS 4.0 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(33):  set(CMAKE_C_COMPILE_OPTIONS_VISIBILITY -fvisibility= )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(35):  set(CMAKE_SHARED_LIBRARY_C_FLAGS -fPIC )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(36):  set(CMAKE_SHARED_LIBRARY_CREATE_C_FLAGS -shared )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(37):  set(CMAKE_C_COMPILE_OPTIONS_SYSROOT --sysroot= )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(39):  set(CMAKE_C_LINKER_WRAPPER_FLAG -Wl, )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(40):  set(CMAKE_C_LINKER_WRAPPER_FLAG_SEP , )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(46):  get_property(_IN_TC GLOBAL PROPERTY IN_TRY_COMPILE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(47):  if(CMAKE_C_COMPILER_ID STREQUAL GNU AND _IN_TC AND NOT CMAKE_FORCE_DEPFILES )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(48):  else()
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(52):  set(CMAKE_DEPFILE_FLAGS_C -MD -MT <DEP_TARGET> -MF <DEP_FILE> )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(56):  set(CMAKE_C_LINKER_DEPFILE_FLAGS LINKER:--dependency-file,<DEP_FILE> )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(57):  set(CMAKE_C_LINKER_DEPFILE_FORMAT gcc )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(59):  if(NOT DEFINED CMAKE_C_LINKER_DEPFILE_SUPPORTED )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(88):  if(CMAKE_C_LINKER_DEPFILE_SUPPORTED )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(90):  else()
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(91):  unset(CMAKE_C_LINK_DEPENDS_USE_LINKER )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(97):  if(NOT DEFINED CMAKE_LINK_DEPENDS_USE_LINKER )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(98):  set(CMAKE_LINK_DEPENDS_USE_LINKER FALSE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(102):  string(APPEND CMAKE_C_FLAGS_INIT   )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(103):  string(APPEND CMAKE_C_FLAGS_DEBUG_INIT  -g )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(104):  string(APPEND CMAKE_C_FLAGS_MINSIZEREL_INIT  -Os -DNDEBUG )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(105):  string(APPEND CMAKE_C_FLAGS_RELEASE_INIT  -O3 -DNDEBUG )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(106):  string(APPEND CMAKE_C_FLAGS_RELWITHDEBINFO_INIT  -O2 -g -DNDEBUG )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(107):  set(CMAKE_C_CREATE_PREPROCESSED_SOURCE <CMAKE_C_COMPILER> <DEFINES> <INCLUDES> <FLAGS> -E <SOURCE> > <PREPROCESSED_SOURCE> )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(108):  set(CMAKE_C_CREATE_ASSEMBLY_SOURCE <CMAKE_C_COMPILER> <DEFINES> <INCLUDES> <FLAGS> -S <SOURCE> -o <ASSEMBLY_SOURCE> )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(109):  if(NOT APPLE OR NOT CMAKE_C_COMPILER_VERSION VERSION_LESS 4 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(110):  set(CMAKE_INCLUDE_SYSTEM_FLAG_C -isystem  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(113):  set(_CMAKE_C_IPO_SUPPORTED_BY_CMAKE YES )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(114):  set(_CMAKE_C_IPO_MAY_BE_SUPPORTED_BY_COMPILER NO )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(119):  if(NOT CMAKE_C_COMPILER_VERSION VERSION_LESS 4.5 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(120):  set(_CMAKE_C_IPO_MAY_BE_SUPPORTED_BY_COMPILER YES )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(122):  set(__lto_flags  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(129):  if(NOT CMAKE_C_COMPILER_VERSION VERSION_LESS 11.0 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(130):  list(APPEND __lto_flags -flto=auto )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(141):  if(NOT CMAKE_C_COMPILER_VERSION VERSION_LESS 4.7 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(145):  list(APPEND __lto_flags -fno-fat-lto-objects )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(148):  set(CMAKE_C_COMPILE_OPTIONS_IPO -flto=auto;-fno-fat-lto-objects )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(157):  set(CMAKE_C_ARCHIVE_CREATE_IPO "" cr <TARGET> <LINK_FLAGS> <OBJECTS> )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(161):  set(CMAKE_C_ARCHIVE_APPEND_IPO "" r <TARGET> <LINK_FLAGS> <OBJECTS> )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(165):  set(CMAKE_C_ARCHIVE_FINISH_IPO "" <TARGET> )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(170):  if(C STREQUAL CXX )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(180):  if(NOT xC STREQUAL xFortran )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(181):  set(CMAKE_PCH_EXTENSION .gch )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(182):  if(NOT CMAKE_GENERATOR MATCHES Xcode )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(183):  set(CMAKE_PCH_PROLOGUE #pragma GCC system_header )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(185):  set(CMAKE_C_COMPILE_OPTIONS_INVALID_PCH -Winvalid-pch )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(186):  set(CMAKE_C_COMPILE_OPTIONS_USE_PCH -include <PCH_HEADER> )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(187):  set(CMAKE_C_COMPILE_OPTIONS_CREATE_PCH -x c-header -include <PCH_HEADER> )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(192):  if(CMAKE_C_COMPILER_VERSION VERSION_GREATER_EQUAL 4.9 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(193):  set(CMAKE_C_COMPILE_OPTIONS_COLOR_DIAGNOSTICS -fdiagnostics-color=always )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(194):  set(CMAKE_C_COMPILE_OPTIONS_COLOR_DIAGNOSTICS_OFF -fno-diagnostics-color )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/Clang.cmake(28):  set(CMAKE_C_COMPILE_OPTIONS_PIE -fPIE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/Clang.cmake(31):  if(APPLE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/Clang.cmake(32):  set(CMAKE_C_LINK_OPTIONS_PIE -fPIE -Xlinker -pie )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/Clang.cmake(33):  set(CMAKE_C_LINK_OPTIONS_NO_PIE -Xlinker -no_pie )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/Clang.cmake(35):  set(CMAKE_INCLUDE_SYSTEM_FLAG_C -isystem  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/Clang.cmake(36):  set(CMAKE_C_COMPILE_OPTIONS_VISIBILITY -fvisibility= )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/Clang.cmake(37):  if(CMAKE_C_COMPILER_VERSION VERSION_LESS 3.4.0 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/Clang.cmake(40):  else()
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/Clang.cmake(41):  set(CMAKE_C_COMPILE_OPTIONS_TARGET --target= )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/Clang.cmake(42):  set(CMAKE_C_COMPILE_OPTIONS_EXTERNAL_TOOLCHAIN --gcc-toolchain= )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/Clang.cmake(44):  set(CMAKE_C_LINKER_WRAPPER_FLAG -Xlinker   )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/Clang.cmake(45):  set(CMAKE_C_LINKER_WRAPPER_FLAG_SEP )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/Clang.cmake(47):  if(CMAKE_C_COMPILER_TARGET AND C STREQUAL CXX )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/Clang.cmake(55):  set(_CMAKE_C_IPO_SUPPORTED_BY_CMAKE YES )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/Clang.cmake(56):  set(_CMAKE_C_IPO_MAY_BE_SUPPORTED_BY_COMPILER YES )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/Clang.cmake(58):  string(COMPARE EQUAL AppleClang AppleClang __is_apple_clang )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/Clang.cmake(59):  string(COMPARE EQUAL AppleClang FujitsuClang __is_fujitsu_clang )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/Clang.cmake(64):  set(_CMAKE_LTO_THIN TRUE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/Clang.cmake(65):  if(__is_apple_clang )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/Clang.cmake(66):  if(CMAKE_C_COMPILER_VERSION VERSION_LESS 8.0 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/Clang.cmake(77):  if(_CMAKE_LTO_THIN )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/Clang.cmake(78):  set(CMAKE_C_COMPILE_OPTIONS_IPO -flto=thin )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/Clang.cmake(83):  if(ANDROID AND NOT CMAKE_ANDROID_NDK_VERSION VERSION_GREATER_EQUAL 22 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/Clang.cmake(88):  if(ANDROID OR __is_apple_clang )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/Clang.cmake(89):  set(__ar /usr/bin/ar )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/Clang.cmake(90):  set(__ranlib /usr/bin/ranlib )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/Clang.cmake(96):  set(CMAKE_C_ARCHIVE_CREATE_IPO "/usr/bin/ar" cr <TARGET> <LINK_FLAGS> <OBJECTS> )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/Clang.cmake(100):  set(CMAKE_C_ARCHIVE_APPEND_IPO "/usr/bin/ar" r <TARGET> <LINK_FLAGS> <OBJECTS> )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/Clang.cmake(104):  set(CMAKE_C_ARCHIVE_FINISH_IPO "/usr/bin/ranlib" <TARGET> )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/Clang.cmake(108):  set(CMAKE_PCH_EXTENSION .pch )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/Clang.cmake(109):  if(NOT CMAKE_GENERATOR MATCHES Xcode )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/Clang.cmake(110):  set(CMAKE_PCH_PROLOGUE #pragma clang system_header )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/Clang.cmake(112):  if(CMAKE_C_COMPILER_VERSION VERSION_GREATER_EQUAL 11.0.0 AND NOT __is_apple_clang )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/Clang.cmake(115):  set(CMAKE_C_COMPILE_OPTIONS_USE_PCH -Xclang -include-pch -Xclang <PCH_FILE> -Xclang -include -Xclang <PCH_HEADER> )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/Clang.cmake(116):  set(CMAKE_C_COMPILE_OPTIONS_CREATE_PCH -Xclang -emit-pch -Xclang -include -Xclang <PCH_HEADER> -x c-header )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/Clang.cmake(119):  if(CMAKE_C_COMPILER_VERSION VERSION_GREATER_EQUAL 2.6 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/Clang.cmake(120):  set(CMAKE_C_COMPILE_OPTIONS_COLOR_DIAGNOSTICS -fcolor-diagnostics )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/Clang.cmake(121):  set(CMAKE_C_COMPILE_OPTIONS_COLOR_DIAGNOSTICS_OFF -fno-color-diagnostics )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/AppleClang-C.cmake(5):  if(NOT x STREQUAL xMSVC )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/AppleClang-C.cmake(6):  if(( NOT DEFINED CMAKE_DEPENDS_USE_COMPILER OR CMAKE_DEPENDS_USE_COMPILER ) AND CMAKE_GENERATOR MATCHES Makefiles AND CMAKE_DEPFILE_FLAGS_C )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/AppleClang-C.cmake(10):  set(CMAKE_C_DEPFILE_FORMAT gcc )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/AppleClang-C.cmake(11):  set(CMAKE_C_DEPENDS_USE_COMPILER TRUE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/AppleClang-C.cmake(15):  set(CMAKE_C_COMPILE_OPTIONS_EXPLICIT_LANGUAGE -x c )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/AppleClang-C.cmake(17):  if(NOT CMAKE_C_COMPILER_VERSION VERSION_LESS 4.0 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/AppleClang-C.cmake(18):  set(CMAKE_C90_STANDARD_COMPILE_OPTION -std=c90 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/AppleClang-C.cmake(19):  set(CMAKE_C90_EXTENSION_COMPILE_OPTION -std=gnu90 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/AppleClang-C.cmake(20):  set(CMAKE_C90_STANDARD__HAS_FULL_SUPPORT ON )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/AppleClang-C.cmake(22):  set(CMAKE_C99_STANDARD_COMPILE_OPTION -std=c99 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/AppleClang-C.cmake(23):  set(CMAKE_C99_EXTENSION_COMPILE_OPTION -std=gnu99 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/AppleClang-C.cmake(24):  set(CMAKE_C99_STANDARD__HAS_FULL_SUPPORT ON )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/AppleClang-C.cmake(26):  set(CMAKE_C11_STANDARD_COMPILE_OPTION -std=c11 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/AppleClang-C.cmake(27):  set(CMAKE_C11_EXTENSION_COMPILE_OPTION -std=gnu11 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/AppleClang-C.cmake(28):  set(CMAKE_C11_STANDARD__HAS_FULL_SUPPORT ON )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/AppleClang-C.cmake(31):  if(CMAKE_C_COMPILER_VERSION VERSION_GREATER_EQUAL 11.0 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/AppleClang-C.cmake(32):  set(CMAKE_C17_STANDARD_COMPILE_OPTION -std=c17 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/AppleClang-C.cmake(33):  set(CMAKE_C17_EXTENSION_COMPILE_OPTION -std=gnu17 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/AppleClang-C.cmake(36):  if(CMAKE_C_COMPILER_VERSION VERSION_GREATER_EQUAL 11.0.3 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/AppleClang-C.cmake(37):  set(CMAKE_C23_STANDARD_COMPILE_OPTION -std=c2x )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/AppleClang-C.cmake(38):  set(CMAKE_C23_EXTENSION_COMPILE_OPTION -std=gnu2x )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/AppleClang-C.cmake(41):  __compiler_check_default_language_standard(C 4.0 99 9.1 11 12.0.5 17 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake(33):  set(__std_ver_pairs 4.0;99;9.1;11;12.0.5;17 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake(34):  string(REGEX REPLACE  *; *   __std_ver_pairs 4.0;99;9.1;11;12.0.5;17 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake(35):  string(REGEX MATCHALL [^ ]+ [^ ]+ __std_ver_pairs 4.0 99 9.1 11 12.0.5 17 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake(39):  if(CMAKE_C_COMPILER_VERSION VERSION_GREATER_EQUAL 4.0 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake(40):  if(NOT CMAKE_C_COMPILER_FORCED )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake(41):  if(NOT CMAKE_C_STANDARD_COMPUTED_DEFAULT OR NOT DEFINED CMAKE_C_EXTENSIONS_COMPUTED_DEFAULT )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake(44):  set(CMAKE_C_STANDARD_DEFAULT 17 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake(45):  set(CMAKE_C_EXTENSIONS_DEFAULT ON )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake(67):  unset(__std_ver_pairs )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCInformation.cmake(28):  set(CMAKE_BASE_NAME )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCInformation.cmake(29):  get_filename_component(CMAKE_BASE_NAME /usr/bin/clang NAME_WE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCInformation.cmake(30):  if(CMAKE_COMPILER_IS_GNUCC )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCInformation.cmake(36):  if(CMAKE_SYSTEM_PROCESSOR )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCInformation.cmake(37):  if(CMAKE_C_COMPILER_ID )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCInformation.cmake(38):  include(Platform/Apple-AppleClang-C-arm64 OPTIONAL RESULT_VARIABLE _INCLUDED_FILE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCInformation.cmake(40):  if(NOT _INCLUDED_FILE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCInformation.cmake(41):  include(Platform/Apple-clang-arm64 OPTIONAL )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCInformation.cmake(47):  if(CMAKE_C_COMPILER_ID )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCInformation.cmake(48):  include(Platform/Apple-AppleClang-C OPTIONAL RESULT_VARIABLE _INCLUDED_FILE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Apple-AppleClang-C.cmake(1):  include(Platform/Apple-Clang-C )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Apple-Clang-C.cmake(1):  include(Platform/Apple-Clang )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Apple-Clang.cmake(6):  include_guard()
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Apple-Clang.cmake(8):  macro(__apple_compiler_clang lang )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Apple-Clang-C.cmake(2):  __apple_compiler_clang(C )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Apple-Clang.cmake(9):  set(CMAKE_C_VERBOSE_FLAG -v -Wl,-v )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Apple-Clang.cmake(10):  set(CMAKE_SHARED_LIBRARY_CREATE_C_FLAGS -dynamiclib -Wl,-headerpad_max_install_names )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Apple-Clang.cmake(11):  set(CMAKE_SHARED_MODULE_CREATE_C_FLAGS -bundle -Wl,-headerpad_max_install_names )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Apple-Clang.cmake(12):  set(CMAKE_C_SYSROOT_FLAG -isysroot )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Apple-Clang.cmake(13):  set(CMAKE_C_OSX_DEPLOYMENT_TARGET_FLAG -mmacosx-version-min= )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Apple-Clang.cmake(14):  if(NOT CMAKE_C_COMPILER_VERSION VERSION_LESS 3.2 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Apple-Clang.cmake(15):  set(CMAKE_C_SYSTEM_FRAMEWORK_SEARCH_FLAG -iframework  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Apple-Clang.cmake(17):  if(_CMAKE_OSX_SYSROOT_PATH MATCHES /iPhoneOS )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Apple-Clang.cmake(19):  elseif(_CMAKE_OSX_SYSROOT_PATH MATCHES /iPhoneSimulator )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Apple-Clang.cmake(21):  elseif(_CMAKE_OSX_SYSROOT_PATH MATCHES /AppleTVOS )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Apple-Clang.cmake(23):  elseif(_CMAKE_OSX_SYSROOT_PATH MATCHES /AppleTVSimulator )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Apple-Clang.cmake(25):  elseif(_CMAKE_OSX_SYSROOT_PATH MATCHES /WatchOS )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Apple-Clang.cmake(27):  elseif(_CMAKE_OSX_SYSROOT_PATH MATCHES /WatchSimulator )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Apple-Clang.cmake(29):  else()
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Apple-Clang.cmake(30):  set(CMAKE_C_OSX_DEPLOYMENT_TARGET_FLAG -mmacosx-version-min= )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Apple-AppleClang-C.cmake(2):  if(NOT CMAKE_C_COMPILER_VERSION VERSION_LESS 4.2 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Apple-AppleClang-C.cmake(3):  set(CMAKE_C_SYSTEM_FRAMEWORK_SEARCH_FLAG -iframework  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCInformation.cmake(51):  if(NOT _INCLUDED_FILE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCInformation.cmake(57):  if(CMAKE_C_COMPILER_WRAPPER )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCInformation.cmake(65):  if(NOT _INCLUDED_FILE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCInformation.cmake(69):  if(CMAKE_C_SIZEOF_DATA_PTR )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCInformation.cmake(70):  foreach(f  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCInformation.cmake(73):  unset(CMAKE_C_ABI_FILES )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCInformation.cmake(82):  if(CMAKE_USER_MAKE_RULES_OVERRIDE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCInformation.cmake(88):  if(CMAKE_USER_MAKE_RULES_OVERRIDE_C )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCInformation.cmake(94):  if(CMAKE_EXECUTABLE_FORMAT STREQUAL ELF )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCInformation.cmake(106):  if(NOT CMAKE_MODULE_EXISTS )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCInformation.cmake(111):  set(CMAKE_C_FLAGS_INIT    )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCInformation.cmake(113):  cmake_initialize_per_config_variable(CMAKE_C_FLAGS Flags used by the C compiler )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(9):  string(STRIP    _INIT )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(10):  set(CMAKE_C_FLAGS  CACHE STRING Flags used by the C compiler during all build types. )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(12):  mark_as_advanced(CMAKE_C_FLAGS )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(14):  if(NOT CMAKE_NOT_USING_CONFIG_FLAGS )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(15):  set(_CONFIGS Debug Release MinSizeRel RelWithDebInfo )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(17):  get_property(_GENERATOR_IS_MULTI_CONFIG GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(18):  if(_GENERATOR_IS_MULTI_CONFIG )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(20):  else()
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(21):  if(NOT CMAKE_NO_BUILD_TYPE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(22):  set(CMAKE_BUILD_TYPE  CACHE STRING Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ... )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(25):  list(APPEND _CONFIGS Debug )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(28):  list(REMOVE_DUPLICATES _CONFIGS )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(29):  foreach(_BUILD_TYPE IN LISTS _CONFIGS )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Debug STREQUAL  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Debug _BUILD_TYPE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  -g _INIT )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_C_FLAGS_DEBUG -g CACHE STRING Flags used by the C compiler during DEBUG builds. )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_C_FLAGS_DEBUG )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Release STREQUAL  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Release _BUILD_TYPE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  -O3 -DNDEBUG _INIT )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_C_FLAGS_RELEASE -O3 -DNDEBUG CACHE STRING Flags used by the C compiler during RELEASE builds. )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_C_FLAGS_RELEASE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT MinSizeRel STREQUAL  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER MinSizeRel _BUILD_TYPE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  -Os -DNDEBUG _INIT )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_C_FLAGS_MINSIZEREL -Os -DNDEBUG CACHE STRING Flags used by the C compiler during MINSIZEREL builds. )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_C_FLAGS_MINSIZEREL )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT RelWithDebInfo STREQUAL  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER RelWithDebInfo _BUILD_TYPE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  -O2 -g -DNDEBUG _INIT )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_C_FLAGS_RELWITHDEBINFO -O2 -g -DNDEBUG CACHE STRING Flags used by the C compiler during RELWITHDEBINFO builds. )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_C_FLAGS_RELWITHDEBINFO )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCInformation.cmake(115):  if(CMAKE_C_STANDARD_LIBRARIES_INIT )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCInformation.cmake(121):  if(NOT CMAKE_C_COMPILER_LAUNCHER AND DEFINED ENV{CMAKE_C_COMPILER_LAUNCHER} )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCInformation.cmake(126):  if(NOT CMAKE_C_LINKER_LAUNCHER AND DEFINED ENV{CMAKE_C_LINKER_LAUNCHER} )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCInformation.cmake(131):  include(CMakeCommonLanguageInclude )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCommonLanguageInclude.cmake(9):  string(APPEND CMAKE_EXE_LINKER_FLAGS_INIT   )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCommonLanguageInclude.cmake(10):  string(APPEND CMAKE_SHARED_LINKER_FLAGS_INIT   )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCommonLanguageInclude.cmake(11):  string(APPEND CMAKE_MODULE_LINKER_FLAGS_INIT   )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCommonLanguageInclude.cmake(13):  cmake_initialize_per_config_variable(CMAKE_EXE_LINKER_FLAGS Flags used by the linker )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(9):  string(STRIP   _INIT )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(10):  set(CMAKE_EXE_LINKER_FLAGS  CACHE STRING Flags used by the linker during all build types. )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(12):  mark_as_advanced(CMAKE_EXE_LINKER_FLAGS )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(14):  if(NOT CMAKE_NOT_USING_CONFIG_FLAGS )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(15):  set(_CONFIGS Debug Release MinSizeRel RelWithDebInfo )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(17):  get_property(_GENERATOR_IS_MULTI_CONFIG GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(18):  if(_GENERATOR_IS_MULTI_CONFIG )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(20):  else()
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(21):  if(NOT CMAKE_NO_BUILD_TYPE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(22):  set(CMAKE_BUILD_TYPE  CACHE STRING Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ... )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(25):  list(APPEND _CONFIGS Debug )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(28):  list(REMOVE_DUPLICATES _CONFIGS )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(29):  foreach(_BUILD_TYPE IN LISTS _CONFIGS )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Debug STREQUAL  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Debug _BUILD_TYPE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_EXE_LINKER_FLAGS_DEBUG  CACHE STRING Flags used by the linker during DEBUG builds. )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Release STREQUAL  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Release _BUILD_TYPE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_EXE_LINKER_FLAGS_RELEASE  CACHE STRING Flags used by the linker during RELEASE builds. )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT MinSizeRel STREQUAL  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER MinSizeRel _BUILD_TYPE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL  CACHE STRING Flags used by the linker during MINSIZEREL builds. )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT RelWithDebInfo STREQUAL  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER RelWithDebInfo _BUILD_TYPE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO  CACHE STRING Flags used by the linker during RELWITHDEBINFO builds. )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCommonLanguageInclude.cmake(14):  cmake_initialize_per_config_variable(CMAKE_SHARED_LINKER_FLAGS Flags used by the linker during the creation of shared libraries )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(9):  string(STRIP   _INIT )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(10):  set(CMAKE_SHARED_LINKER_FLAGS  CACHE STRING Flags used by the linker during the creation of shared libraries during all build types. )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(12):  mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(14):  if(NOT CMAKE_NOT_USING_CONFIG_FLAGS )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(15):  set(_CONFIGS Debug Release MinSizeRel RelWithDebInfo )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(17):  get_property(_GENERATOR_IS_MULTI_CONFIG GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(18):  if(_GENERATOR_IS_MULTI_CONFIG )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(20):  else()
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(21):  if(NOT CMAKE_NO_BUILD_TYPE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(22):  set(CMAKE_BUILD_TYPE  CACHE STRING Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ... )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(25):  list(APPEND _CONFIGS Debug )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(28):  list(REMOVE_DUPLICATES _CONFIGS )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(29):  foreach(_BUILD_TYPE IN LISTS _CONFIGS )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Debug STREQUAL  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Debug _BUILD_TYPE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_SHARED_LINKER_FLAGS_DEBUG  CACHE STRING Flags used by the linker during the creation of shared libraries during DEBUG builds. )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Release STREQUAL  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Release _BUILD_TYPE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_SHARED_LINKER_FLAGS_RELEASE  CACHE STRING Flags used by the linker during the creation of shared libraries during RELEASE builds. )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT MinSizeRel STREQUAL  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER MinSizeRel _BUILD_TYPE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL  CACHE STRING Flags used by the linker during the creation of shared libraries during MINSIZEREL builds. )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT RelWithDebInfo STREQUAL  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER RelWithDebInfo _BUILD_TYPE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO  CACHE STRING Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds. )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCommonLanguageInclude.cmake(15):  cmake_initialize_per_config_variable(CMAKE_MODULE_LINKER_FLAGS Flags used by the linker during the creation of modules )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(9):  string(STRIP   _INIT )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(10):  set(CMAKE_MODULE_LINKER_FLAGS  CACHE STRING Flags used by the linker during the creation of modules during all build types. )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(12):  mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(14):  if(NOT CMAKE_NOT_USING_CONFIG_FLAGS )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(15):  set(_CONFIGS Debug Release MinSizeRel RelWithDebInfo )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(17):  get_property(_GENERATOR_IS_MULTI_CONFIG GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(18):  if(_GENERATOR_IS_MULTI_CONFIG )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(20):  else()
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(21):  if(NOT CMAKE_NO_BUILD_TYPE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(22):  set(CMAKE_BUILD_TYPE  CACHE STRING Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ... )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(25):  list(APPEND _CONFIGS Debug )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(28):  list(REMOVE_DUPLICATES _CONFIGS )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(29):  foreach(_BUILD_TYPE IN LISTS _CONFIGS )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Debug STREQUAL  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Debug _BUILD_TYPE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_MODULE_LINKER_FLAGS_DEBUG  CACHE STRING Flags used by the linker during the creation of modules during DEBUG builds. )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Release STREQUAL  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Release _BUILD_TYPE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_MODULE_LINKER_FLAGS_RELEASE  CACHE STRING Flags used by the linker during the creation of modules during RELEASE builds. )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT MinSizeRel STREQUAL  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER MinSizeRel _BUILD_TYPE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL  CACHE STRING Flags used by the linker during the creation of modules during MINSIZEREL builds. )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT RelWithDebInfo STREQUAL  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER RelWithDebInfo _BUILD_TYPE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO  CACHE STRING Flags used by the linker during the creation of modules during RELWITHDEBINFO builds. )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCommonLanguageInclude.cmake(16):  cmake_initialize_per_config_variable(CMAKE_STATIC_LINKER_FLAGS Flags used by the linker during the creation of static libraries )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(9):  string(STRIP  _INIT )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(10):  set(CMAKE_STATIC_LINKER_FLAGS  CACHE STRING Flags used by the linker during the creation of static libraries during all build types. )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(12):  mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(14):  if(NOT CMAKE_NOT_USING_CONFIG_FLAGS )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(15):  set(_CONFIGS Debug Release MinSizeRel RelWithDebInfo )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(17):  get_property(_GENERATOR_IS_MULTI_CONFIG GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(18):  if(_GENERATOR_IS_MULTI_CONFIG )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(20):  else()
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(21):  if(NOT CMAKE_NO_BUILD_TYPE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(22):  set(CMAKE_BUILD_TYPE  CACHE STRING Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ... )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(25):  list(APPEND _CONFIGS Debug )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(28):  list(REMOVE_DUPLICATES _CONFIGS )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(29):  foreach(_BUILD_TYPE IN LISTS _CONFIGS )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Debug STREQUAL  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Debug _BUILD_TYPE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_STATIC_LINKER_FLAGS_DEBUG  CACHE STRING Flags used by the linker during the creation of static libraries during DEBUG builds. )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Release STREQUAL  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Release _BUILD_TYPE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_STATIC_LINKER_FLAGS_RELEASE  CACHE STRING Flags used by the linker during the creation of static libraries during RELEASE builds. )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT MinSizeRel STREQUAL  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER MinSizeRel _BUILD_TYPE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL  CACHE STRING Flags used by the linker during the creation of static libraries during MINSIZEREL builds. )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT RelWithDebInfo STREQUAL  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER RelWithDebInfo _BUILD_TYPE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO  CACHE STRING Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds. )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCommonLanguageInclude.cmake(19):  set(CMAKE_BUILD_TOOL /usr/bin/make )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCommonLanguageInclude.cmake(21):  mark_as_advanced(CMAKE_VERBOSE_MAKEFILE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCInformation.cmake(161):  if(NOT CMAKE_C_CREATE_SHARED_LIBRARY )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCInformation.cmake(167):  if(NOT CMAKE_C_CREATE_SHARED_MODULE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCInformation.cmake(173):  if(NOT DEFINED CMAKE_C_ARCHIVE_CREATE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCInformation.cmake(174):  set(CMAKE_C_ARCHIVE_CREATE <CMAKE_AR> qc <TARGET> <LINK_FLAGS> <OBJECTS> )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCInformation.cmake(176):  if(NOT DEFINED CMAKE_C_ARCHIVE_APPEND )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCInformation.cmake(177):  set(CMAKE_C_ARCHIVE_APPEND <CMAKE_AR> q <TARGET> <LINK_FLAGS> <OBJECTS> )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCInformation.cmake(179):  if(NOT DEFINED CMAKE_C_ARCHIVE_FINISH )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCInformation.cmake(180):  set(CMAKE_C_ARCHIVE_FINISH <CMAKE_RANLIB> <TARGET> )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCInformation.cmake(184):  if(NOT CMAKE_C_COMPILE_OBJECT )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCInformation.cmake(185):  set(CMAKE_C_COMPILE_OBJECT <CMAKE_C_COMPILER> <DEFINES> <INCLUDES> <FLAGS> -o <OBJECT> -c <SOURCE> )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCInformation.cmake(189):  if(NOT CMAKE_C_LINK_EXECUTABLE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCInformation.cmake(190):  set(CMAKE_C_LINK_EXECUTABLE <CMAKE_C_COMPILER> <FLAGS> <CMAKE_C_LINK_FLAGS> <LINK_FLAGS> <OBJECTS> -o <TARGET> <LINK_LIBRARIES> )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCInformation.cmake(194):  if(NOT CMAKE_EXECUTABLE_RUNTIME_C_FLAG )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCInformation.cmake(195):  set(CMAKE_EXECUTABLE_RUNTIME_C_FLAG -Wl,-rpath, )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCInformation.cmake(198):  if(NOT CMAKE_EXECUTABLE_RUNTIME_C_FLAG_SEP )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCInformation.cmake(199):  set(CMAKE_EXECUTABLE_RUNTIME_C_FLAG_SEP  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCInformation.cmake(202):  if(NOT CMAKE_EXECUTABLE_RPATH_LINK_C_FLAG )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCInformation.cmake(203):  set(CMAKE_EXECUTABLE_RPATH_LINK_C_FLAG  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCInformation.cmake(206):  set(CMAKE_C_INFORMATION_LOADED 1 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCXXInformation.cmake(11):  include(CMakeLanguageInformation )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeLanguageInformation.cmake(9):  macro(__cmake_include_compiler_wrapper lang )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCXXInformation.cmake(15):  if(UNIX )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCXXInformation.cmake(16):  set(CMAKE_CXX_OUTPUT_EXTENSION .o )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCXXInformation.cmake(21):  set(_INCLUDED_FILE 0 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCXXInformation.cmake(24):  if(CMAKE_CXX_COMPILER_ID )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCXXInformation.cmake(25):  include(Compiler/AppleClang-CXX OPTIONAL )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/AppleClang-CXX.cmake(1):  include(Compiler/Clang )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/Clang.cmake(6):  if(__COMPILER_CLANG )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/Clang.cmake(7):  return()
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/AppleClang-CXX.cmake(2):  __compiler_clang(CXX )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/Clang.cmake(27):  __compiler_gnu(CXX )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(20):  set(CMAKE_CXX_VERBOSE_FLAG -v )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(21):  set(CMAKE_CXX_COMPILE_OPTIONS_WARNING_AS_ERROR -Werror )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(22):  set(CMAKE_CXX_COMPILE_OPTIONS_PIC -fPIC )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(23):  set(_CMAKE_CXX_PIE_MAY_BE_SUPPORTED_BY_LINKER NO )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(24):  if(NOT CMAKE_CXX_COMPILER_VERSION VERSION_LESS 3.4 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(25):  set(CMAKE_CXX_COMPILE_OPTIONS_PIE -fPIE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(28):  set(_CMAKE_CXX_PIE_MAY_BE_SUPPORTED_BY_LINKER YES )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(29):  set(CMAKE_CXX_LINK_OPTIONS_PIE -fPIE -pie )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(30):  set(CMAKE_CXX_LINK_OPTIONS_NO_PIE -no-pie )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(32):  if(NOT CMAKE_CXX_COMPILER_VERSION VERSION_LESS 4.0 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(33):  set(CMAKE_CXX_COMPILE_OPTIONS_VISIBILITY -fvisibility= )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(35):  set(CMAKE_SHARED_LIBRARY_CXX_FLAGS -fPIC )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(36):  set(CMAKE_SHARED_LIBRARY_CREATE_CXX_FLAGS -shared )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(37):  set(CMAKE_CXX_COMPILE_OPTIONS_SYSROOT --sysroot= )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(39):  set(CMAKE_CXX_LINKER_WRAPPER_FLAG -Wl, )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(40):  set(CMAKE_CXX_LINKER_WRAPPER_FLAG_SEP , )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(46):  get_property(_IN_TC GLOBAL PROPERTY IN_TRY_COMPILE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(47):  if(CMAKE_CXX_COMPILER_ID STREQUAL GNU AND _IN_TC AND NOT CMAKE_FORCE_DEPFILES )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(48):  else()
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(52):  set(CMAKE_DEPFILE_FLAGS_CXX -MD -MT <DEP_TARGET> -MF <DEP_FILE> )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(56):  set(CMAKE_CXX_LINKER_DEPFILE_FLAGS LINKER:--dependency-file,<DEP_FILE> )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(57):  set(CMAKE_CXX_LINKER_DEPFILE_FORMAT gcc )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(59):  if(NOT DEFINED CMAKE_CXX_LINKER_DEPFILE_SUPPORTED )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(88):  if(CMAKE_CXX_LINKER_DEPFILE_SUPPORTED )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(90):  else()
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(91):  unset(CMAKE_CXX_LINK_DEPENDS_USE_LINKER )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(97):  if(NOT DEFINED CMAKE_LINK_DEPENDS_USE_LINKER )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(102):  string(APPEND CMAKE_CXX_FLAGS_INIT   )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(103):  string(APPEND CMAKE_CXX_FLAGS_DEBUG_INIT  -g )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(104):  string(APPEND CMAKE_CXX_FLAGS_MINSIZEREL_INIT  -Os -DNDEBUG )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(105):  string(APPEND CMAKE_CXX_FLAGS_RELEASE_INIT  -O3 -DNDEBUG )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(106):  string(APPEND CMAKE_CXX_FLAGS_RELWITHDEBINFO_INIT  -O2 -g -DNDEBUG )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(107):  set(CMAKE_CXX_CREATE_PREPROCESSED_SOURCE <CMAKE_CXX_COMPILER> <DEFINES> <INCLUDES> <FLAGS> -E <SOURCE> > <PREPROCESSED_SOURCE> )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(108):  set(CMAKE_CXX_CREATE_ASSEMBLY_SOURCE <CMAKE_CXX_COMPILER> <DEFINES> <INCLUDES> <FLAGS> -S <SOURCE> -o <ASSEMBLY_SOURCE> )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(109):  if(NOT APPLE OR NOT CMAKE_CXX_COMPILER_VERSION VERSION_LESS 4 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(110):  set(CMAKE_INCLUDE_SYSTEM_FLAG_CXX -isystem  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(113):  set(_CMAKE_CXX_IPO_SUPPORTED_BY_CMAKE YES )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(114):  set(_CMAKE_CXX_IPO_MAY_BE_SUPPORTED_BY_COMPILER NO )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(119):  if(NOT CMAKE_CXX_COMPILER_VERSION VERSION_LESS 4.5 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(120):  set(_CMAKE_CXX_IPO_MAY_BE_SUPPORTED_BY_COMPILER YES )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(122):  set(__lto_flags  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(129):  if(NOT CMAKE_CXX_COMPILER_VERSION VERSION_LESS 11.0 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(130):  list(APPEND __lto_flags -flto=auto )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(141):  if(NOT CMAKE_CXX_COMPILER_VERSION VERSION_LESS 4.7 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(145):  list(APPEND __lto_flags -fno-fat-lto-objects )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(148):  set(CMAKE_CXX_COMPILE_OPTIONS_IPO -flto=auto;-fno-fat-lto-objects )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(157):  set(CMAKE_CXX_ARCHIVE_CREATE_IPO "" cr <TARGET> <LINK_FLAGS> <OBJECTS> )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(161):  set(CMAKE_CXX_ARCHIVE_APPEND_IPO "" r <TARGET> <LINK_FLAGS> <OBJECTS> )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(165):  set(CMAKE_CXX_ARCHIVE_FINISH_IPO "" <TARGET> )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(170):  if(CXX STREQUAL CXX )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(171):  set(CMAKE_CXX_COMPILER_PREDEFINES_COMMAND /usr/bin/clang++ )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(172):  if(CMAKE_CXX_COMPILER_ARG1 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(177):  list(APPEND CMAKE_CXX_COMPILER_PREDEFINES_COMMAND -dM -E -c /opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCXXCompilerABI.cpp )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(180):  if(NOT xCXX STREQUAL xFortran )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(181):  set(CMAKE_PCH_EXTENSION .gch )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(182):  if(NOT CMAKE_GENERATOR MATCHES Xcode )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(183):  set(CMAKE_PCH_PROLOGUE #pragma GCC system_header )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(185):  set(CMAKE_CXX_COMPILE_OPTIONS_INVALID_PCH -Winvalid-pch )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(186):  set(CMAKE_CXX_COMPILE_OPTIONS_USE_PCH -include <PCH_HEADER> )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(187):  set(CMAKE_CXX_COMPILE_OPTIONS_CREATE_PCH -x c++-header -include <PCH_HEADER> )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(192):  if(CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 4.9 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(193):  set(CMAKE_CXX_COMPILE_OPTIONS_COLOR_DIAGNOSTICS -fdiagnostics-color=always )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/GNU.cmake(194):  set(CMAKE_CXX_COMPILE_OPTIONS_COLOR_DIAGNOSTICS_OFF -fno-diagnostics-color )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/Clang.cmake(28):  set(CMAKE_CXX_COMPILE_OPTIONS_PIE -fPIE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/Clang.cmake(31):  if(APPLE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/Clang.cmake(32):  set(CMAKE_CXX_LINK_OPTIONS_PIE -fPIE -Xlinker -pie )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/Clang.cmake(33):  set(CMAKE_CXX_LINK_OPTIONS_NO_PIE -Xlinker -no_pie )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/Clang.cmake(35):  set(CMAKE_INCLUDE_SYSTEM_FLAG_CXX -isystem  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/Clang.cmake(36):  set(CMAKE_CXX_COMPILE_OPTIONS_VISIBILITY -fvisibility= )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/Clang.cmake(37):  if(CMAKE_CXX_COMPILER_VERSION VERSION_LESS 3.4.0 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/Clang.cmake(40):  else()
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/Clang.cmake(41):  set(CMAKE_CXX_COMPILE_OPTIONS_TARGET --target= )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/Clang.cmake(42):  set(CMAKE_CXX_COMPILE_OPTIONS_EXTERNAL_TOOLCHAIN --gcc-toolchain= )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/Clang.cmake(44):  set(CMAKE_CXX_LINKER_WRAPPER_FLAG -Xlinker   )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/Clang.cmake(45):  set(CMAKE_CXX_LINKER_WRAPPER_FLAG_SEP )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/Clang.cmake(47):  if(CMAKE_CXX_COMPILER_TARGET AND CXX STREQUAL CXX )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/Clang.cmake(55):  set(_CMAKE_CXX_IPO_SUPPORTED_BY_CMAKE YES )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/Clang.cmake(56):  set(_CMAKE_CXX_IPO_MAY_BE_SUPPORTED_BY_COMPILER YES )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/Clang.cmake(58):  string(COMPARE EQUAL AppleClang AppleClang __is_apple_clang )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/Clang.cmake(59):  string(COMPARE EQUAL AppleClang FujitsuClang __is_fujitsu_clang )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/Clang.cmake(64):  set(_CMAKE_LTO_THIN TRUE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/Clang.cmake(65):  if(__is_apple_clang )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/Clang.cmake(66):  if(CMAKE_CXX_COMPILER_VERSION VERSION_LESS 8.0 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/Clang.cmake(77):  if(_CMAKE_LTO_THIN )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/Clang.cmake(78):  set(CMAKE_CXX_COMPILE_OPTIONS_IPO -flto=thin )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/Clang.cmake(83):  if(ANDROID AND NOT CMAKE_ANDROID_NDK_VERSION VERSION_GREATER_EQUAL 22 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/Clang.cmake(88):  if(ANDROID OR __is_apple_clang )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/Clang.cmake(89):  set(__ar /usr/bin/ar )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/Clang.cmake(90):  set(__ranlib /usr/bin/ranlib )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/Clang.cmake(96):  set(CMAKE_CXX_ARCHIVE_CREATE_IPO "/usr/bin/ar" cr <TARGET> <LINK_FLAGS> <OBJECTS> )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/Clang.cmake(100):  set(CMAKE_CXX_ARCHIVE_APPEND_IPO "/usr/bin/ar" r <TARGET> <LINK_FLAGS> <OBJECTS> )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/Clang.cmake(104):  set(CMAKE_CXX_ARCHIVE_FINISH_IPO "/usr/bin/ranlib" <TARGET> )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/Clang.cmake(108):  set(CMAKE_PCH_EXTENSION .pch )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/Clang.cmake(109):  if(NOT CMAKE_GENERATOR MATCHES Xcode )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/Clang.cmake(110):  set(CMAKE_PCH_PROLOGUE #pragma clang system_header )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/Clang.cmake(112):  if(CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 11.0.0 AND NOT __is_apple_clang )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/Clang.cmake(115):  set(CMAKE_CXX_COMPILE_OPTIONS_USE_PCH -Xclang -include-pch -Xclang <PCH_FILE> -Xclang -include -Xclang <PCH_HEADER> )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/Clang.cmake(116):  set(CMAKE_CXX_COMPILE_OPTIONS_CREATE_PCH -Xclang -emit-pch -Xclang -include -Xclang <PCH_HEADER> -x c++-header )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/Clang.cmake(119):  if(CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 2.6 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/Clang.cmake(120):  set(CMAKE_CXX_COMPILE_OPTIONS_COLOR_DIAGNOSTICS -fcolor-diagnostics )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/Clang.cmake(121):  set(CMAKE_CXX_COMPILE_OPTIONS_COLOR_DIAGNOSTICS_OFF -fno-color-diagnostics )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/AppleClang-CXX.cmake(4):  set(CMAKE_CXX_COMPILE_OPTIONS_EXPLICIT_LANGUAGE -x c++ )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/AppleClang-CXX.cmake(6):  if(NOT x STREQUAL xMSVC )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/AppleClang-CXX.cmake(7):  if(( NOT DEFINED CMAKE_DEPENDS_USE_COMPILER OR CMAKE_DEPENDS_USE_COMPILER ) AND CMAKE_GENERATOR MATCHES Makefiles AND CMAKE_DEPFILE_FLAGS_CXX )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/AppleClang-CXX.cmake(11):  set(CMAKE_CXX_DEPFILE_FORMAT gcc )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/AppleClang-CXX.cmake(12):  set(CMAKE_CXX_DEPENDS_USE_COMPILER TRUE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/AppleClang-CXX.cmake(15):  set(CMAKE_CXX_COMPILE_OPTIONS_VISIBILITY_INLINES_HIDDEN -fvisibility-inlines-hidden )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/AppleClang-CXX.cmake(18):  if(NOT CMAKE_CXX_COMPILER_VERSION VERSION_LESS 4.0 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/AppleClang-CXX.cmake(19):  set(CMAKE_CXX98_STANDARD_COMPILE_OPTION -std=c++98 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/AppleClang-CXX.cmake(20):  set(CMAKE_CXX98_EXTENSION_COMPILE_OPTION -std=gnu++98 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/AppleClang-CXX.cmake(21):  set(CMAKE_CXX98_STANDARD__HAS_FULL_SUPPORT ON )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/AppleClang-CXX.cmake(23):  set(CMAKE_CXX11_STANDARD_COMPILE_OPTION -std=c++11 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/AppleClang-CXX.cmake(24):  set(CMAKE_CXX11_EXTENSION_COMPILE_OPTION -std=gnu++11 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/AppleClang-CXX.cmake(27):  if(NOT CMAKE_CXX_COMPILER_VERSION VERSION_LESS 6.1 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/AppleClang-CXX.cmake(28):  set(CMAKE_CXX14_STANDARD_COMPILE_OPTION -std=c++14 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/AppleClang-CXX.cmake(29):  set(CMAKE_CXX14_EXTENSION_COMPILE_OPTION -std=gnu++14 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/AppleClang-CXX.cmake(30):  set(CMAKE_CXX14_STANDARD__HAS_FULL_SUPPORT ON )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/AppleClang-CXX.cmake(38):  if(NOT CMAKE_CXX_COMPILER_VERSION VERSION_LESS 10.0 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/AppleClang-CXX.cmake(39):  set(CMAKE_CXX17_STANDARD_COMPILE_OPTION -std=c++17 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/AppleClang-CXX.cmake(40):  set(CMAKE_CXX17_EXTENSION_COMPILE_OPTION -std=gnu++17 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/AppleClang-CXX.cmake(46):  if(NOT CMAKE_CXX_COMPILER_VERSION VERSION_LESS 8.0 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/AppleClang-CXX.cmake(47):  set(CMAKE_CXX11_STANDARD__HAS_FULL_SUPPORT ON )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/AppleClang-CXX.cmake(50):  if(NOT CMAKE_CXX_COMPILER_VERSION VERSION_LESS 13.0 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/AppleClang-CXX.cmake(51):  set(CMAKE_CXX20_STANDARD_COMPILE_OPTION -std=c++20 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/AppleClang-CXX.cmake(52):  set(CMAKE_CXX20_EXTENSION_COMPILE_OPTION -std=gnu++20 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/AppleClang-CXX.cmake(58):  if(NOT CMAKE_CXX_COMPILER_VERSION VERSION_LESS 13.0 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/AppleClang-CXX.cmake(59):  set(CMAKE_CXX23_STANDARD_COMPILE_OPTION -std=c++2b )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/AppleClang-CXX.cmake(60):  set(CMAKE_CXX23_EXTENSION_COMPILE_OPTION -std=gnu++2b )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/AppleClang-CXX.cmake(63):  __compiler_check_default_language_standard(CXX 4.0 98 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake(33):  set(__std_ver_pairs 4.0;98; )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake(34):  string(REGEX REPLACE  *; *   __std_ver_pairs 4.0;98; )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake(35):  string(REGEX MATCHALL [^ ]+ [^ ]+ __std_ver_pairs 4.0 98  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake(39):  if(CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 4.0 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake(40):  if(NOT CMAKE_CXX_COMPILER_FORCED )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake(41):  if(NOT CMAKE_CXX_STANDARD_COMPUTED_DEFAULT OR NOT DEFINED CMAKE_CXX_EXTENSIONS_COMPUTED_DEFAULT )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake(44):  set(CMAKE_CXX_STANDARD_DEFAULT 98 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake(45):  set(CMAKE_CXX_EXTENSIONS_DEFAULT ON )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake(67):  unset(__std_ver_pairs )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCXXInformation.cmake(28):  set(CMAKE_BASE_NAME )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCXXInformation.cmake(29):  get_filename_component(CMAKE_BASE_NAME /usr/bin/clang++ NAME_WE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCXXInformation.cmake(31):  if(CMAKE_COMPILER_IS_GNUCXX )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCXXInformation.cmake(37):  if(CMAKE_SYSTEM_PROCESSOR )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCXXInformation.cmake(38):  if(CMAKE_CXX_COMPILER_ID )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCXXInformation.cmake(39):  include(Platform/Apple-AppleClang-CXX-arm64 OPTIONAL RESULT_VARIABLE _INCLUDED_FILE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCXXInformation.cmake(41):  if(NOT _INCLUDED_FILE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCXXInformation.cmake(42):  include(Platform/Apple-clang++-arm64 OPTIONAL )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCXXInformation.cmake(47):  if(CMAKE_CXX_COMPILER_ID )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCXXInformation.cmake(48):  include(Platform/Apple-AppleClang-CXX OPTIONAL RESULT_VARIABLE _INCLUDED_FILE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Apple-AppleClang-CXX.cmake(1):  include(Platform/Apple-Clang-CXX )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Apple-Clang-CXX.cmake(1):  include(Platform/Apple-Clang )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Apple-Clang.cmake(6):  include_guard()
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Apple-Clang-CXX.cmake(2):  __apple_compiler_clang(CXX )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Apple-Clang.cmake(9):  set(CMAKE_CXX_VERBOSE_FLAG -v -Wl,-v )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Apple-Clang.cmake(10):  set(CMAKE_SHARED_LIBRARY_CREATE_CXX_FLAGS -dynamiclib -Wl,-headerpad_max_install_names )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Apple-Clang.cmake(11):  set(CMAKE_SHARED_MODULE_CREATE_CXX_FLAGS -bundle -Wl,-headerpad_max_install_names )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Apple-Clang.cmake(12):  set(CMAKE_CXX_SYSROOT_FLAG -isysroot )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Apple-Clang.cmake(13):  set(CMAKE_CXX_OSX_DEPLOYMENT_TARGET_FLAG -mmacosx-version-min= )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Apple-Clang.cmake(14):  if(NOT CMAKE_CXX_COMPILER_VERSION VERSION_LESS 3.2 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Apple-Clang.cmake(15):  set(CMAKE_CXX_SYSTEM_FRAMEWORK_SEARCH_FLAG -iframework  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Apple-Clang.cmake(17):  if(_CMAKE_OSX_SYSROOT_PATH MATCHES /iPhoneOS )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Apple-Clang.cmake(19):  elseif(_CMAKE_OSX_SYSROOT_PATH MATCHES /iPhoneSimulator )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Apple-Clang.cmake(21):  elseif(_CMAKE_OSX_SYSROOT_PATH MATCHES /AppleTVOS )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Apple-Clang.cmake(23):  elseif(_CMAKE_OSX_SYSROOT_PATH MATCHES /AppleTVSimulator )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Apple-Clang.cmake(25):  elseif(_CMAKE_OSX_SYSROOT_PATH MATCHES /WatchOS )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Apple-Clang.cmake(27):  elseif(_CMAKE_OSX_SYSROOT_PATH MATCHES /WatchSimulator )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Apple-Clang.cmake(29):  else()
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Apple-Clang.cmake(30):  set(CMAKE_CXX_OSX_DEPLOYMENT_TARGET_FLAG -mmacosx-version-min= )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Apple-AppleClang-CXX.cmake(2):  if(NOT CMAKE_CXX_COMPILER_VERSION VERSION_LESS 4.2 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Platform/Apple-AppleClang-CXX.cmake(3):  set(CMAKE_CXX_SYSTEM_FRAMEWORK_SEARCH_FLAG -iframework  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCXXInformation.cmake(50):  if(NOT _INCLUDED_FILE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCXXInformation.cmake(56):  if(CMAKE_CXX_COMPILER_WRAPPER )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCXXInformation.cmake(64):  if(NOT _INCLUDED_FILE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCXXInformation.cmake(68):  if(CMAKE_CXX_SIZEOF_DATA_PTR )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCXXInformation.cmake(69):  foreach(f  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCXXInformation.cmake(72):  unset(CMAKE_CXX_ABI_FILES )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCXXInformation.cmake(81):  if(CMAKE_USER_MAKE_RULES_OVERRIDE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCXXInformation.cmake(87):  if(CMAKE_USER_MAKE_RULES_OVERRIDE_CXX )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCXXInformation.cmake(97):  if(NOT CMAKE_SHARED_LIBRARY_CREATE_CXX_FLAGS )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCXXInformation.cmake(101):  if(NOT CMAKE_CXX_COMPILE_OPTIONS_PIC )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCXXInformation.cmake(105):  if(NOT CMAKE_CXX_COMPILE_OPTIONS_PIE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCXXInformation.cmake(108):  if(NOT CMAKE_CXX_LINK_OPTIONS_PIE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCXXInformation.cmake(111):  if(NOT CMAKE_CXX_LINK_OPTIONS_NO_PIE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCXXInformation.cmake(115):  if(NOT CMAKE_CXX_COMPILE_OPTIONS_DLL )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCXXInformation.cmake(116):  set(CMAKE_CXX_COMPILE_OPTIONS_DLL  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCXXInformation.cmake(119):  if(NOT CMAKE_SHARED_LIBRARY_CXX_FLAGS )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCXXInformation.cmake(123):  if(NOT DEFINED CMAKE_SHARED_LIBRARY_LINK_CXX_FLAGS )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCXXInformation.cmake(124):  set(CMAKE_SHARED_LIBRARY_LINK_CXX_FLAGS  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCXXInformation.cmake(127):  if(NOT CMAKE_SHARED_LIBRARY_RUNTIME_CXX_FLAG )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCXXInformation.cmake(128):  set(CMAKE_SHARED_LIBRARY_RUNTIME_CXX_FLAG -Wl,-rpath, )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCXXInformation.cmake(131):  if(NOT CMAKE_SHARED_LIBRARY_RUNTIME_CXX_FLAG_SEP )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCXXInformation.cmake(132):  set(CMAKE_SHARED_LIBRARY_RUNTIME_CXX_FLAG_SEP  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCXXInformation.cmake(135):  if(NOT CMAKE_SHARED_LIBRARY_RPATH_LINK_CXX_FLAG )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCXXInformation.cmake(136):  set(CMAKE_SHARED_LIBRARY_RPATH_LINK_CXX_FLAG  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCXXInformation.cmake(139):  if(NOT DEFINED CMAKE_EXE_EXPORTS_CXX_FLAG )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCXXInformation.cmake(140):  set(CMAKE_EXE_EXPORTS_CXX_FLAG  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCXXInformation.cmake(143):  if(NOT DEFINED CMAKE_SHARED_LIBRARY_SONAME_CXX_FLAG )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCXXInformation.cmake(144):  set(CMAKE_SHARED_LIBRARY_SONAME_CXX_FLAG -install_name )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCXXInformation.cmake(147):  if(NOT CMAKE_EXECUTABLE_RUNTIME_CXX_FLAG )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCXXInformation.cmake(148):  set(CMAKE_EXECUTABLE_RUNTIME_CXX_FLAG -Wl,-rpath, )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCXXInformation.cmake(151):  if(NOT CMAKE_EXECUTABLE_RUNTIME_CXX_FLAG_SEP )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCXXInformation.cmake(152):  set(CMAKE_EXECUTABLE_RUNTIME_CXX_FLAG_SEP  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCXXInformation.cmake(155):  if(NOT CMAKE_EXECUTABLE_RPATH_LINK_CXX_FLAG )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCXXInformation.cmake(156):  set(CMAKE_EXECUTABLE_RPATH_LINK_CXX_FLAG  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCXXInformation.cmake(159):  if(NOT DEFINED CMAKE_SHARED_LIBRARY_LINK_CXX_WITH_RUNTIME_PATH )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCXXInformation.cmake(160):  set(CMAKE_SHARED_LIBRARY_LINK_CXX_WITH_RUNTIME_PATH  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCXXInformation.cmake(163):  if(NOT CMAKE_INCLUDE_FLAG_CXX )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCXXInformation.cmake(164):  set(CMAKE_INCLUDE_FLAG_CXX -I )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCXXInformation.cmake(170):  if(NOT CMAKE_MODULE_EXISTS )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCXXInformation.cmake(176):  if(NOT CMAKE_SHARED_MODULE_CREATE_CXX_FLAGS )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCXXInformation.cmake(180):  if(NOT CMAKE_SHARED_MODULE_CXX_FLAGS )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCXXInformation.cmake(181):  set(CMAKE_SHARED_MODULE_CXX_FLAGS  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCXXInformation.cmake(185):  foreach(type SHARED_LIBRARY SHARED_MODULE EXE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCXXInformation.cmake(186):  if(NOT CMAKE_SHARED_LIBRARY_LINK_STATIC_CXX_FLAGS )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCXXInformation.cmake(187):  set(CMAKE_SHARED_LIBRARY_LINK_STATIC_CXX_FLAGS  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCXXInformation.cmake(190):  if(NOT CMAKE_SHARED_LIBRARY_LINK_DYNAMIC_CXX_FLAGS )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCXXInformation.cmake(191):  set(CMAKE_SHARED_LIBRARY_LINK_DYNAMIC_CXX_FLAGS  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCXXInformation.cmake(186):  if(NOT CMAKE_SHARED_MODULE_LINK_STATIC_CXX_FLAGS )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCXXInformation.cmake(187):  set(CMAKE_SHARED_MODULE_LINK_STATIC_CXX_FLAGS  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCXXInformation.cmake(190):  if(NOT CMAKE_SHARED_MODULE_LINK_DYNAMIC_CXX_FLAGS )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCXXInformation.cmake(191):  set(CMAKE_SHARED_MODULE_LINK_DYNAMIC_CXX_FLAGS  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCXXInformation.cmake(186):  if(NOT CMAKE_EXE_LINK_STATIC_CXX_FLAGS )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCXXInformation.cmake(187):  set(CMAKE_EXE_LINK_STATIC_CXX_FLAGS  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCXXInformation.cmake(190):  if(NOT CMAKE_EXE_LINK_DYNAMIC_CXX_FLAGS )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCXXInformation.cmake(191):  set(CMAKE_EXE_LINK_DYNAMIC_CXX_FLAGS  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCXXInformation.cmake(196):  if(CMAKE_EXECUTABLE_FORMAT STREQUAL ELF )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCXXInformation.cmake(209):  set(CMAKE_CXX_FLAGS_INIT    )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCXXInformation.cmake(211):  cmake_initialize_per_config_variable(CMAKE_CXX_FLAGS Flags used by the CXX compiler )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(9):  string(STRIP    _INIT )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(10):  set(CMAKE_CXX_FLAGS  CACHE STRING Flags used by the CXX compiler during all build types. )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(12):  mark_as_advanced(CMAKE_CXX_FLAGS )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(14):  if(NOT CMAKE_NOT_USING_CONFIG_FLAGS )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(15):  set(_CONFIGS Debug Release MinSizeRel RelWithDebInfo )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(17):  get_property(_GENERATOR_IS_MULTI_CONFIG GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(18):  if(_GENERATOR_IS_MULTI_CONFIG )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(20):  else()
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(21):  if(NOT CMAKE_NO_BUILD_TYPE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(22):  set(CMAKE_BUILD_TYPE  CACHE STRING Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ... )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(25):  list(APPEND _CONFIGS Debug )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(28):  list(REMOVE_DUPLICATES _CONFIGS )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(29):  foreach(_BUILD_TYPE IN LISTS _CONFIGS )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Debug STREQUAL  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Debug _BUILD_TYPE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  -g _INIT )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_CXX_FLAGS_DEBUG -g CACHE STRING Flags used by the CXX compiler during DEBUG builds. )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Release STREQUAL  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Release _BUILD_TYPE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  -O3 -DNDEBUG _INIT )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_CXX_FLAGS_RELEASE -O3 -DNDEBUG CACHE STRING Flags used by the CXX compiler during RELEASE builds. )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT MinSizeRel STREQUAL  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER MinSizeRel _BUILD_TYPE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  -Os -DNDEBUG _INIT )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_CXX_FLAGS_MINSIZEREL -Os -DNDEBUG CACHE STRING Flags used by the CXX compiler during MINSIZEREL builds. )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT RelWithDebInfo STREQUAL  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER RelWithDebInfo _BUILD_TYPE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  -O2 -g -DNDEBUG _INIT )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_CXX_FLAGS_RELWITHDEBINFO -O2 -g -DNDEBUG CACHE STRING Flags used by the CXX compiler during RELWITHDEBINFO builds. )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCXXInformation.cmake(213):  if(CMAKE_CXX_STANDARD_LIBRARIES_INIT )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCXXInformation.cmake(219):  if(NOT CMAKE_CXX_COMPILER_LAUNCHER AND DEFINED ENV{CMAKE_CXX_COMPILER_LAUNCHER} )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCXXInformation.cmake(224):  if(NOT CMAKE_CXX_LINKER_LAUNCHER AND DEFINED ENV{CMAKE_CXX_LINKER_LAUNCHER} )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCXXInformation.cmake(229):  include(CMakeCommonLanguageInclude )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCommonLanguageInclude.cmake(9):  string(APPEND CMAKE_EXE_LINKER_FLAGS_INIT   )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCommonLanguageInclude.cmake(10):  string(APPEND CMAKE_SHARED_LINKER_FLAGS_INIT   )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCommonLanguageInclude.cmake(11):  string(APPEND CMAKE_MODULE_LINKER_FLAGS_INIT   )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCommonLanguageInclude.cmake(13):  cmake_initialize_per_config_variable(CMAKE_EXE_LINKER_FLAGS Flags used by the linker )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(9):  string(STRIP    _INIT )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(10):  set(CMAKE_EXE_LINKER_FLAGS  CACHE STRING Flags used by the linker during all build types. )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(12):  mark_as_advanced(CMAKE_EXE_LINKER_FLAGS )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(14):  if(NOT CMAKE_NOT_USING_CONFIG_FLAGS )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(15):  set(_CONFIGS Debug Release MinSizeRel RelWithDebInfo )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(17):  get_property(_GENERATOR_IS_MULTI_CONFIG GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(18):  if(_GENERATOR_IS_MULTI_CONFIG )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(20):  else()
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(21):  if(NOT CMAKE_NO_BUILD_TYPE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(22):  set(CMAKE_BUILD_TYPE  CACHE STRING Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ... )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(25):  list(APPEND _CONFIGS Debug )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(28):  list(REMOVE_DUPLICATES _CONFIGS )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(29):  foreach(_BUILD_TYPE IN LISTS _CONFIGS )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Debug STREQUAL  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Debug _BUILD_TYPE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_EXE_LINKER_FLAGS_DEBUG  CACHE STRING Flags used by the linker during DEBUG builds. )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Release STREQUAL  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Release _BUILD_TYPE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_EXE_LINKER_FLAGS_RELEASE  CACHE STRING Flags used by the linker during RELEASE builds. )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT MinSizeRel STREQUAL  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER MinSizeRel _BUILD_TYPE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL  CACHE STRING Flags used by the linker during MINSIZEREL builds. )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT RelWithDebInfo STREQUAL  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER RelWithDebInfo _BUILD_TYPE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO  CACHE STRING Flags used by the linker during RELWITHDEBINFO builds. )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCommonLanguageInclude.cmake(14):  cmake_initialize_per_config_variable(CMAKE_SHARED_LINKER_FLAGS Flags used by the linker during the creation of shared libraries )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(9):  string(STRIP    _INIT )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(10):  set(CMAKE_SHARED_LINKER_FLAGS  CACHE STRING Flags used by the linker during the creation of shared libraries during all build types. )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(12):  mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(14):  if(NOT CMAKE_NOT_USING_CONFIG_FLAGS )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(15):  set(_CONFIGS Debug Release MinSizeRel RelWithDebInfo )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(17):  get_property(_GENERATOR_IS_MULTI_CONFIG GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(18):  if(_GENERATOR_IS_MULTI_CONFIG )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(20):  else()
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(21):  if(NOT CMAKE_NO_BUILD_TYPE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(22):  set(CMAKE_BUILD_TYPE  CACHE STRING Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ... )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(25):  list(APPEND _CONFIGS Debug )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(28):  list(REMOVE_DUPLICATES _CONFIGS )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(29):  foreach(_BUILD_TYPE IN LISTS _CONFIGS )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Debug STREQUAL  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Debug _BUILD_TYPE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_SHARED_LINKER_FLAGS_DEBUG  CACHE STRING Flags used by the linker during the creation of shared libraries during DEBUG builds. )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Release STREQUAL  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Release _BUILD_TYPE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_SHARED_LINKER_FLAGS_RELEASE  CACHE STRING Flags used by the linker during the creation of shared libraries during RELEASE builds. )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT MinSizeRel STREQUAL  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER MinSizeRel _BUILD_TYPE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL  CACHE STRING Flags used by the linker during the creation of shared libraries during MINSIZEREL builds. )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT RelWithDebInfo STREQUAL  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER RelWithDebInfo _BUILD_TYPE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO  CACHE STRING Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds. )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCommonLanguageInclude.cmake(15):  cmake_initialize_per_config_variable(CMAKE_MODULE_LINKER_FLAGS Flags used by the linker during the creation of modules )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(9):  string(STRIP    _INIT )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(10):  set(CMAKE_MODULE_LINKER_FLAGS  CACHE STRING Flags used by the linker during the creation of modules during all build types. )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(12):  mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(14):  if(NOT CMAKE_NOT_USING_CONFIG_FLAGS )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(15):  set(_CONFIGS Debug Release MinSizeRel RelWithDebInfo )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(17):  get_property(_GENERATOR_IS_MULTI_CONFIG GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(18):  if(_GENERATOR_IS_MULTI_CONFIG )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(20):  else()
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(21):  if(NOT CMAKE_NO_BUILD_TYPE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(22):  set(CMAKE_BUILD_TYPE  CACHE STRING Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ... )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(25):  list(APPEND _CONFIGS Debug )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(28):  list(REMOVE_DUPLICATES _CONFIGS )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(29):  foreach(_BUILD_TYPE IN LISTS _CONFIGS )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Debug STREQUAL  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Debug _BUILD_TYPE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_MODULE_LINKER_FLAGS_DEBUG  CACHE STRING Flags used by the linker during the creation of modules during DEBUG builds. )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Release STREQUAL  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Release _BUILD_TYPE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_MODULE_LINKER_FLAGS_RELEASE  CACHE STRING Flags used by the linker during the creation of modules during RELEASE builds. )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT MinSizeRel STREQUAL  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER MinSizeRel _BUILD_TYPE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL  CACHE STRING Flags used by the linker during the creation of modules during MINSIZEREL builds. )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT RelWithDebInfo STREQUAL  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER RelWithDebInfo _BUILD_TYPE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO  CACHE STRING Flags used by the linker during the creation of modules during RELWITHDEBINFO builds. )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCommonLanguageInclude.cmake(16):  cmake_initialize_per_config_variable(CMAKE_STATIC_LINKER_FLAGS Flags used by the linker during the creation of static libraries )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(9):  string(STRIP  _INIT )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(10):  set(CMAKE_STATIC_LINKER_FLAGS  CACHE STRING Flags used by the linker during the creation of static libraries during all build types. )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(12):  mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(14):  if(NOT CMAKE_NOT_USING_CONFIG_FLAGS )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(15):  set(_CONFIGS Debug Release MinSizeRel RelWithDebInfo )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(17):  get_property(_GENERATOR_IS_MULTI_CONFIG GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(18):  if(_GENERATOR_IS_MULTI_CONFIG )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(20):  else()
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(21):  if(NOT CMAKE_NO_BUILD_TYPE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(22):  set(CMAKE_BUILD_TYPE  CACHE STRING Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ... )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(25):  list(APPEND _CONFIGS Debug )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(28):  list(REMOVE_DUPLICATES _CONFIGS )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(29):  foreach(_BUILD_TYPE IN LISTS _CONFIGS )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Debug STREQUAL  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Debug _BUILD_TYPE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_STATIC_LINKER_FLAGS_DEBUG  CACHE STRING Flags used by the linker during the creation of static libraries during DEBUG builds. )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Release STREQUAL  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Release _BUILD_TYPE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_STATIC_LINKER_FLAGS_RELEASE  CACHE STRING Flags used by the linker during the creation of static libraries during RELEASE builds. )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT MinSizeRel STREQUAL  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER MinSizeRel _BUILD_TYPE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL  CACHE STRING Flags used by the linker during the creation of static libraries during MINSIZEREL builds. )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT RelWithDebInfo STREQUAL  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER RelWithDebInfo _BUILD_TYPE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO  CACHE STRING Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds. )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCommonLanguageInclude.cmake(19):  set(CMAKE_BUILD_TOOL /usr/bin/make )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCommonLanguageInclude.cmake(21):  mark_as_advanced(CMAKE_VERBOSE_MAKEFILE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCXXInformation.cmake(258):  if(NOT CMAKE_CXX_CREATE_SHARED_LIBRARY )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCXXInformation.cmake(264):  if(NOT CMAKE_CXX_CREATE_SHARED_MODULE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCXXInformation.cmake(271):  if(NOT DEFINED CMAKE_CXX_ARCHIVE_CREATE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCXXInformation.cmake(272):  set(CMAKE_CXX_ARCHIVE_CREATE <CMAKE_AR> qc <TARGET> <LINK_FLAGS> <OBJECTS> )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCXXInformation.cmake(274):  if(NOT DEFINED CMAKE_CXX_ARCHIVE_APPEND )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCXXInformation.cmake(275):  set(CMAKE_CXX_ARCHIVE_APPEND <CMAKE_AR> q <TARGET> <LINK_FLAGS> <OBJECTS> )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCXXInformation.cmake(277):  if(NOT DEFINED CMAKE_CXX_ARCHIVE_FINISH )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCXXInformation.cmake(278):  set(CMAKE_CXX_ARCHIVE_FINISH <CMAKE_RANLIB> <TARGET> )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCXXInformation.cmake(282):  if(NOT CMAKE_CXX_COMPILE_OBJECT )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCXXInformation.cmake(283):  set(CMAKE_CXX_COMPILE_OBJECT <CMAKE_CXX_COMPILER> <DEFINES> <INCLUDES> <FLAGS> -o <OBJECT> -c <SOURCE> )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCXXInformation.cmake(287):  if(NOT CMAKE_CXX_LINK_EXECUTABLE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCXXInformation.cmake(288):  set(CMAKE_CXX_LINK_EXECUTABLE <CMAKE_CXX_COMPILER> <FLAGS> <CMAKE_CXX_LINK_FLAGS> <LINK_FLAGS> <OBJECTS> -o <TARGET> <LINK_LIBRARIES> )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCXXInformation.cmake(292):  mark_as_advanced(CMAKE_VERBOSE_MAKEFILE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeCXXInformation.cmake(296):  set(CMAKE_CXX_INFORMATION_LOADED 1 )
/Users/D032227/dev/cpp/spcmake/CMakeLists.txt(5):  set(gcc_like_cxx $<COMPILE_LANG_AND_ID:CXX,ARMClang,AppleClang,Clang,GNU,LCC> )
/Users/D032227/dev/cpp/spcmake/CMakeLists.txt(6):  set(msvc_cxx $<COMPILE_LANG_AND_ID:CXX,MSVC> )
/Users/D032227/dev/cpp/spcmake/CMakeLists.txt(9):  include(CheckCXXSourceCompiles )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CheckCXXSourceCompiles.cmake(48):  include_guard(GLOBAL )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CheckCXXSourceCompiles.cmake(49):  include(Internal/CheckSourceCompiles )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Internal/CheckSourceCompiles.cmake(4):  include_guard(GLOBAL )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Internal/CheckSourceCompiles.cmake(6):  block(SCOPE_FOR POLICIES )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Internal/CheckSourceCompiles.cmake(7):  cmake_policy(SET CMP0054 NEW )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Internal/CheckSourceCompiles.cmake(8):  cmake_policy(SET CMP0057 NEW )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Internal/CheckSourceCompiles.cmake(10):  function(CMAKE_CHECK_SOURCE_COMPILES _lang _source _var )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CheckCXXSourceCompiles.cmake(51):  macro(CHECK_CXX_SOURCE_COMPILES SOURCE VAR )
/Users/D032227/dev/cpp/spcmake/CMakeLists.txt(12):  add_library(sp_compiler_flags INTERFACE )
/Users/D032227/dev/cpp/spcmake/CMakeLists.txt(13):  target_compile_features(sp_compiler_flags INTERFACE cxx_std_20 )
/Users/D032227/dev/cpp/spcmake/CMakeLists.txt(15):  target_compile_options(sp_compiler_flags INTERFACE $<$<COMPILE_LANG_AND_ID:CXX,ARMClang,AppleClang,Clang,GNU,LCC>:$<BUILD_INTERFACE:-Wall;-Wextra;-Wshadow;-Wformat=2;-Wunused>> $<$<COMPILE_LANG_AND_ID:CXX,MSVC>:$<BUILD_INTERFACE:-W3>> )
/Users/D032227/dev/cpp/spcmake/CMakeLists.txt(19):  configure_file(tutorialConfig.h.in tutorialConfig.h )
/Users/D032227/dev/cpp/spcmake/CMakeLists.txt(20):  add_subdirectory(shadedpath_lib )
/Users/D032227/dev/cpp/spcmake/shadedpath_lib/CMakeLists.txt(1):  option(USE_MYMATH Use tutorial provided math implementation OFF )
/Users/D032227/dev/cpp/spcmake/shadedpath_lib/CMakeLists.txt(2):  add_library(shadedpath.lib mymath.cpp )
/Users/D032227/dev/cpp/spcmake/shadedpath_lib/CMakeLists.txt(3):  target_include_directories(shadedpath.lib INTERFACE /Users/D032227/dev/cpp/spcmake/shadedpath_lib )
/Users/D032227/dev/cpp/spcmake/shadedpath_lib/CMakeLists.txt(4):  target_link_libraries(shadedpath.lib PUBLIC sp_compiler_flags )
/Users/D032227/dev/cpp/spcmake/shadedpath_lib/CMakeLists.txt(5):  if(USE_MYMATH )
/Users/D032227/dev/cpp/spcmake/shadedpath_lib/CMakeLists.txt(13):  set(installable_libs shadedpath.lib sp_compiler_flags )
/Users/D032227/dev/cpp/spcmake/shadedpath_lib/CMakeLists.txt(14):  if(TARGET sqrtLibrary )
/Users/D032227/dev/cpp/spcmake/shadedpath_lib/CMakeLists.txt(17):  install(TARGETS shadedpath.lib;sp_compiler_flags DESTINATION lib )
/Users/D032227/dev/cpp/spcmake/shadedpath_lib/CMakeLists.txt(18):  install(FILES mymath.h DESTINATION include )
/Users/D032227/dev/cpp/spcmake/CMakeLists.txt(22):  add_executable(shadedpathv tutorialConfig.cpp )
/Users/D032227/dev/cpp/spcmake/CMakeLists.txt(24):  target_link_libraries(shadedpathv PUBLIC shadedpath.lib sp_compiler_flags )
/Users/D032227/dev/cpp/spcmake/CMakeLists.txt(26):  target_include_directories(shadedpathv PUBLIC /Users/D032227/dev/cpp/spcmake/build )
/Users/D032227/dev/cpp/spcmake/CMakeLists.txt(30):  check_cxx_source_compiles(
    //#include <cmath>
    int main() {
      //std::log(1.0);
      return 0;
    }
     OPENXR_AVAILABLE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CheckCXXSourceCompiles.cmake(52):  cmake_check_source_compiles(CXX 
    //#include <cmath>
    int main() {
      //std::log(1.0);
      return 0;
    }
     OPENXR_AVAILABLE  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/Internal/CheckSourceCompiles.cmake(11):  if(NOT DEFINED OPENXR_AVAILABLE )
/Users/D032227/dev/cpp/spcmake/CMakeLists.txt(37):  if(OPENXR_AVAILABLE )
/Users/D032227/dev/cpp/spcmake/CMakeLists.txt(40):  else()
/Users/D032227/dev/cpp/spcmake/CMakeLists.txt(41):  message(STATUS openxr NOT available )
-- openxr NOT available
/Users/D032227/dev/cpp/spcmake/CMakeLists.txt(49):  install(TARGETS shadedpathv DESTINATION bin )
/Users/D032227/dev/cpp/spcmake/CMakeLists.txt(50):  install(FILES /Users/D032227/dev/cpp/spcmake/build/tutorialConfig.h DESTINATION include )
/Users/D032227/dev/cpp/spcmake/CMakeLists.txt(53):  enable_testing()
/Users/D032227/dev/cpp/spcmake/CMakeLists.txt(55):  include(CTest )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(50):  option(BUILD_TESTING Build the testing tree. ON )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(54):  function(GET_VS_VERSION_STRING generator var )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(61):  include(CTestUseLaunchers )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestUseLaunchers.cmake(38):  if(NOT DEFINED CTEST_USE_LAUNCHERS AND DEFINED ENV{CTEST_USE_LAUNCHERS_DEFAULT} )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestUseLaunchers.cmake(43):  if(NOT Unix Makefiles MATCHES Make|Ninja )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestUseLaunchers.cmake(47):  if(CTEST_USE_LAUNCHERS )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(63):  if(BUILD_TESTING )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(65):  macro(SET_IF_NOT_SET var val )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(71):  macro(SET_IF_SET var val )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(77):  macro(SET_IF_SET_AND_NOT_SET var val )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(84):  enable_testing()
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(86):  if(EXISTS /Users/D032227/dev/cpp/spcmake/CTestConfig.cmake )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(87):  include(/Users/D032227/dev/cpp/spcmake/CTestConfig.cmake )
/Users/D032227/dev/cpp/spcmake/CTestConfig.cmake(1):  set(CTEST_PROJECT_NAME CMakeTutorial )
/Users/D032227/dev/cpp/spcmake/CTestConfig.cmake(2):  set(CTEST_NIGHTLY_START_TIME 00:00:00 EST )
/Users/D032227/dev/cpp/spcmake/CTestConfig.cmake(4):  set(CTEST_DROP_METHOD https )
/Users/D032227/dev/cpp/spcmake/CTestConfig.cmake(5):  set(CTEST_DROP_SITE my.cdash.org )
/Users/D032227/dev/cpp/spcmake/CTestConfig.cmake(6):  set(CTEST_DROP_LOCATION /submit.php?project=CMakeTutorial )
/Users/D032227/dev/cpp/spcmake/CTestConfig.cmake(7):  set(CTEST_DROP_SITE_CDASH TRUE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(88):  SET_IF_SET_AND_NOT_SET(NIGHTLY_START_TIME 00:00:00 EST )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(78):  if(NOT 00:00:00 EST STREQUAL  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(79):  SET_IF_NOT_SET(NIGHTLY_START_TIME 00:00:00 EST )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(66):  if(NOT DEFINED NIGHTLY_START_TIME )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(67):  set(NIGHTLY_START_TIME 00:00:00 EST )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(89):  SET_IF_SET_AND_NOT_SET(SUBMIT_URL  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(78):  if(NOT  STREQUAL  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(90):  SET_IF_SET_AND_NOT_SET(DROP_METHOD https )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(78):  if(NOT https STREQUAL  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(79):  SET_IF_NOT_SET(DROP_METHOD https )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(66):  if(NOT DEFINED DROP_METHOD )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(67):  set(DROP_METHOD https )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(91):  SET_IF_SET_AND_NOT_SET(DROP_SITE my.cdash.org )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(78):  if(NOT my.cdash.org STREQUAL  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(79):  SET_IF_NOT_SET(DROP_SITE my.cdash.org )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(66):  if(NOT DEFINED DROP_SITE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(67):  set(DROP_SITE my.cdash.org )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(92):  SET_IF_SET_AND_NOT_SET(DROP_SITE_USER  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(78):  if(NOT  STREQUAL  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(93):  SET_IF_SET_AND_NOT_SET(DROP_SITE_PASSWORD  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(78):  if(NOT  STREQUAL  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(94):  SET_IF_SET_AND_NOT_SET(DROP_SITE_MODE  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(78):  if(NOT  STREQUAL  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(95):  SET_IF_SET_AND_NOT_SET(DROP_LOCATION /submit.php?project=CMakeTutorial )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(78):  if(NOT /submit.php?project=CMakeTutorial STREQUAL  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(79):  SET_IF_NOT_SET(DROP_LOCATION /submit.php?project=CMakeTutorial )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(66):  if(NOT DEFINED DROP_LOCATION )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(67):  set(DROP_LOCATION /submit.php?project=CMakeTutorial )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(96):  SET_IF_SET_AND_NOT_SET(TRIGGER_SITE  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(78):  if(NOT  STREQUAL  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(97):  SET_IF_SET_AND_NOT_SET(UPDATE_TYPE  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(78):  if(NOT  STREQUAL  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(101):  if(EXISTS /Users/D032227/dev/cpp/spcmake/DartConfig.cmake )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(103):  else()
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(106):  SET_IF_NOT_SET(NIGHTLY_START_TIME 00:00:00 EDT )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(66):  if(NOT DEFINED NIGHTLY_START_TIME )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(107):  SET_IF_NOT_SET(DROP_METHOD http )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(66):  if(NOT DEFINED DROP_METHOD )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(108):  SET_IF_NOT_SET(COMPRESS_SUBMISSION ON )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(66):  if(NOT DEFINED COMPRESS_SUBMISSION )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(67):  set(COMPRESS_SUBMISSION ON )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(110):  SET_IF_NOT_SET(NIGHTLY_START_TIME 00:00:00 EDT )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(66):  if(NOT DEFINED NIGHTLY_START_TIME )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(112):  if(NOT SUBMIT_URL )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(113):  set(SUBMIT_URL https:// )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(114):  if(DROP_SITE_USER )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(121):  string(APPEND SUBMIT_URL my.cdash.org/submit.php?project=CMakeTutorial )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(124):  if(NOT UPDATE_TYPE )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(125):  if(EXISTS /Users/D032227/dev/cpp/spcmake/CVS )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(127):  elseif(EXISTS /Users/D032227/dev/cpp/spcmake/.svn )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(129):  elseif(EXISTS /Users/D032227/dev/cpp/spcmake/.bzr )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(131):  elseif(EXISTS /Users/D032227/dev/cpp/spcmake/.hg )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(133):  elseif(EXISTS /Users/D032227/dev/cpp/spcmake/.git )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(138):  string(TOLOWER  _update_type )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(139):  if( STREQUAL cvs )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(145):  elseif( STREQUAL svn )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(149):  elseif( STREQUAL bzr )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(153):  elseif( STREQUAL hg )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(157):  elseif( STREQUAL git )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(161):  elseif( STREQUAL p4 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(167):  set(DART_TESTING_TIMEOUT 1500 CACHE STRING Maximum time allowed before CTest will kill the test. )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(170):  set(CTEST_SUBMIT_RETRY_DELAY 5 CACHE STRING How long to wait between timed-out CTest submissions. )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(172):  set(CTEST_SUBMIT_RETRY_COUNT 3 CACHE STRING How many times to retry timed-out CTest submissions. )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(175):  find_program(MEMORYCHECK_COMMAND NAMES purify valgrind boundscheck drmemory cuda-memcheck compute-sanitizer PATHS [HKEY_LOCAL_MACHINE\SOFTWARE\Rational Software\Purify\Setup;InstallFolder] DOC Path to the memory checking command, used for memory error detection. )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(181):  set(MEMORYCHECK_SUPPRESSIONS_FILE  CACHE FILEPATH File that contains suppressions for the memory checker )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(183):  find_program(COVERAGE_COMMAND gcov DOC Path to the coverage program that CTest uses for performing coverage inspection )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(186):  set(COVERAGE_EXTRA_FLAGS -l CACHE STRING Extra command line flags to pass to the coverage tool )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(190):  if(COMMAND cmake_host_system_information )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(191):  cmake_host_system_information(RESULT _ctest_hostname QUERY HOSTNAME )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(192):  set(SITE JN297C9793 CACHE STRING Name of the computer/site where compile is being run )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(193):  unset(_ctest_hostname )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(199):  if(NOT BUILDNAME )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(200):  set(DART_COMPILER /usr/bin/clang++ )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(201):  if(NOT DART_COMPILER )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(204):  if(NOT DART_COMPILER )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(207):  if(WIN32 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(209):  else()
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(210):  set(DART_NAME_COMPONENT NAME )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(212):  if(NOT BUILD_NAME_SYSTEM_NAME )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(213):  set(BUILD_NAME_SYSTEM_NAME Darwin )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(215):  if(WIN32 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(218):  if(UNIX OR BORLAND )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(219):  get_filename_component(DART_COMPILER_NAME /usr/bin/clang++ NAME )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(225):  if(DART_COMPILER_NAME MATCHES devenv )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(228):  set(BUILDNAME Darwin-clang++ )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(232):  build_command(MAKECOMMAND_DEFAULT_VALUE CONFIGURATION ${CTEST_CONFIGURATION_TYPE} )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(234):  set(MAKECOMMAND /opt/homebrew/Cellar/cmake/3.27.8/bin/cmake --build . --config "${CTEST_CONFIGURATION_TYPE}" CACHE STRING Command to build the project )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(239):  set(DEFAULT_CTEST_CONFIGURATION_TYPE  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(240):  if(DEFAULT_CTEST_CONFIGURATION_TYPE STREQUAL  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(241):  set(DEFAULT_CTEST_CONFIGURATION_TYPE Release )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(244):  mark_as_advanced(BZRCOMMAND COVERAGE_COMMAND COVERAGE_EXTRA_FLAGS CTEST_SUBMIT_RETRY_DELAY CTEST_SUBMIT_RETRY_COUNT CVSCOMMAND CVS_UPDATE_OPTIONS DART_TESTING_TIMEOUT GITCOMMAND P4COMMAND HGCOMMAND MAKECOMMAND MEMORYCHECK_COMMAND MEMORYCHECK_SUPPRESSIONS_FILE SITE SVNCOMMAND )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(262):  if(NOT RUN_FROM_DART )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(263):  set(RUN_FROM_CTEST_OR_DART 1 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(264):  include(CTestTargets )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(5):  if(NOT RUN_FROM_CTEST_OR_DART )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(9):  if(NOT PROJECT_BINARY_DIR )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(14):  file(MAKE_DIRECTORY /Users/D032227/dev/cpp/spcmake/build/Testing/Temporary )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(15):  get_filename_component(CMAKE_HOST_PATH /opt/homebrew/Cellar/cmake/3.27.8/bin/cmake PATH )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(16):  set(CMAKE_TARGET_PATH  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(17):  find_program(CMAKE_CTEST_COMMAND ctest /opt/homebrew/Cellar/cmake/3.27.8/bin  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(18):  mark_as_advanced(CMAKE_CTEST_COMMAND )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(23):  if(CTEST_NEW_FORMAT )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(27):  else()
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(28):  configure_file(/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/DartConfiguration.tcl.in /Users/D032227/dev/cpp/spcmake/build/DartConfiguration.tcl )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(40):  set(__conf_types  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(41):  get_property(_isMultiConfig GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(42):  if(_isMultiConfig )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(49):  define_property(GLOBAL PROPERTY CTEST_TARGETS_ADDED BRIEF_DOCS Internal property used by CTestTargets module. FULL_DOCS Set by the CTestTargets module to track addition of testing targets. )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(53):  get_property(_CTEST_TARGETS_ADDED GLOBAL PROPERTY CTEST_TARGETS_ADDED )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(54):  if(NOT _CTEST_TARGETS_ADDED )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(55):  set_property(GLOBAL PROPERTY CTEST_TARGETS_ADDED 1 )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(58):  foreach(mode Experimental Nightly Continuous NightlyMemoryCheck )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(59):  add_custom_target(Experimental /opt/homebrew/Cellar/cmake/3.27.8/bin/ctest  -D Experimental USES_TERMINAL )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(63):  set_property(TARGET Experimental PROPERTY RULE_LAUNCH_CUSTOM  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(64):  set_property(TARGET Experimental PROPERTY FOLDER CTestDashboardTargets )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(59):  add_custom_target(Nightly /opt/homebrew/Cellar/cmake/3.27.8/bin/ctest  -D Nightly USES_TERMINAL )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(63):  set_property(TARGET Nightly PROPERTY RULE_LAUNCH_CUSTOM  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(64):  set_property(TARGET Nightly PROPERTY FOLDER CTestDashboardTargets )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(59):  add_custom_target(Continuous /opt/homebrew/Cellar/cmake/3.27.8/bin/ctest  -D Continuous USES_TERMINAL )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(63):  set_property(TARGET Continuous PROPERTY RULE_LAUNCH_CUSTOM  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(64):  set_property(TARGET Continuous PROPERTY FOLDER CTestDashboardTargets )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(59):  add_custom_target(NightlyMemoryCheck /opt/homebrew/Cellar/cmake/3.27.8/bin/ctest  -D NightlyMemoryCheck USES_TERMINAL )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(63):  set_property(TARGET NightlyMemoryCheck PROPERTY RULE_LAUNCH_CUSTOM  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(64):  set_property(TARGET NightlyMemoryCheck PROPERTY FOLDER CTestDashboardTargets )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(68):  if(Unix Makefiles MATCHES (Ninja|Make) )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(70):  foreach(mode Nightly Experimental Continuous )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(71):  foreach(testtype Start Update Configure Build Test Coverage MemCheck Submit )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(75):  add_custom_target(NightlyStart /opt/homebrew/Cellar/cmake/3.27.8/bin/ctest  -D NightlyStart USES_TERMINAL )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(79):  set_property(TARGET NightlyStart PROPERTY RULE_LAUNCH_CUSTOM  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(80):  set_property(TARGET NightlyStart PROPERTY FOLDER CTestDashboardTargets )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(75):  add_custom_target(NightlyUpdate /opt/homebrew/Cellar/cmake/3.27.8/bin/ctest  -D NightlyUpdate USES_TERMINAL )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(79):  set_property(TARGET NightlyUpdate PROPERTY RULE_LAUNCH_CUSTOM  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(80):  set_property(TARGET NightlyUpdate PROPERTY FOLDER CTestDashboardTargets )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(75):  add_custom_target(NightlyConfigure /opt/homebrew/Cellar/cmake/3.27.8/bin/ctest  -D NightlyConfigure USES_TERMINAL )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(79):  set_property(TARGET NightlyConfigure PROPERTY RULE_LAUNCH_CUSTOM  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(80):  set_property(TARGET NightlyConfigure PROPERTY FOLDER CTestDashboardTargets )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(75):  add_custom_target(NightlyBuild /opt/homebrew/Cellar/cmake/3.27.8/bin/ctest  -D NightlyBuild USES_TERMINAL )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(79):  set_property(TARGET NightlyBuild PROPERTY RULE_LAUNCH_CUSTOM  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(80):  set_property(TARGET NightlyBuild PROPERTY FOLDER CTestDashboardTargets )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(75):  add_custom_target(NightlyTest /opt/homebrew/Cellar/cmake/3.27.8/bin/ctest  -D NightlyTest USES_TERMINAL )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(79):  set_property(TARGET NightlyTest PROPERTY RULE_LAUNCH_CUSTOM  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(80):  set_property(TARGET NightlyTest PROPERTY FOLDER CTestDashboardTargets )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(75):  add_custom_target(NightlyCoverage /opt/homebrew/Cellar/cmake/3.27.8/bin/ctest  -D NightlyCoverage USES_TERMINAL )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(79):  set_property(TARGET NightlyCoverage PROPERTY RULE_LAUNCH_CUSTOM  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(80):  set_property(TARGET NightlyCoverage PROPERTY FOLDER CTestDashboardTargets )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(75):  add_custom_target(NightlyMemCheck /opt/homebrew/Cellar/cmake/3.27.8/bin/ctest  -D NightlyMemCheck USES_TERMINAL )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(79):  set_property(TARGET NightlyMemCheck PROPERTY RULE_LAUNCH_CUSTOM  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(80):  set_property(TARGET NightlyMemCheck PROPERTY FOLDER CTestDashboardTargets )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(75):  add_custom_target(NightlySubmit /opt/homebrew/Cellar/cmake/3.27.8/bin/ctest  -D NightlySubmit USES_TERMINAL )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(79):  set_property(TARGET NightlySubmit PROPERTY RULE_LAUNCH_CUSTOM  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(80):  set_property(TARGET NightlySubmit PROPERTY FOLDER CTestDashboardTargets )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(71):  foreach(testtype Start Update Configure Build Test Coverage MemCheck Submit )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(75):  add_custom_target(ExperimentalStart /opt/homebrew/Cellar/cmake/3.27.8/bin/ctest  -D ExperimentalStart USES_TERMINAL )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(79):  set_property(TARGET ExperimentalStart PROPERTY RULE_LAUNCH_CUSTOM  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(80):  set_property(TARGET ExperimentalStart PROPERTY FOLDER CTestDashboardTargets )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(75):  add_custom_target(ExperimentalUpdate /opt/homebrew/Cellar/cmake/3.27.8/bin/ctest  -D ExperimentalUpdate USES_TERMINAL )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(79):  set_property(TARGET ExperimentalUpdate PROPERTY RULE_LAUNCH_CUSTOM  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(80):  set_property(TARGET ExperimentalUpdate PROPERTY FOLDER CTestDashboardTargets )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(75):  add_custom_target(ExperimentalConfigure /opt/homebrew/Cellar/cmake/3.27.8/bin/ctest  -D ExperimentalConfigure USES_TERMINAL )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(79):  set_property(TARGET ExperimentalConfigure PROPERTY RULE_LAUNCH_CUSTOM  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(80):  set_property(TARGET ExperimentalConfigure PROPERTY FOLDER CTestDashboardTargets )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(75):  add_custom_target(ExperimentalBuild /opt/homebrew/Cellar/cmake/3.27.8/bin/ctest  -D ExperimentalBuild USES_TERMINAL )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(79):  set_property(TARGET ExperimentalBuild PROPERTY RULE_LAUNCH_CUSTOM  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(80):  set_property(TARGET ExperimentalBuild PROPERTY FOLDER CTestDashboardTargets )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(75):  add_custom_target(ExperimentalTest /opt/homebrew/Cellar/cmake/3.27.8/bin/ctest  -D ExperimentalTest USES_TERMINAL )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(79):  set_property(TARGET ExperimentalTest PROPERTY RULE_LAUNCH_CUSTOM  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(80):  set_property(TARGET ExperimentalTest PROPERTY FOLDER CTestDashboardTargets )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(75):  add_custom_target(ExperimentalCoverage /opt/homebrew/Cellar/cmake/3.27.8/bin/ctest  -D ExperimentalCoverage USES_TERMINAL )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(79):  set_property(TARGET ExperimentalCoverage PROPERTY RULE_LAUNCH_CUSTOM  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(80):  set_property(TARGET ExperimentalCoverage PROPERTY FOLDER CTestDashboardTargets )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(75):  add_custom_target(ExperimentalMemCheck /opt/homebrew/Cellar/cmake/3.27.8/bin/ctest  -D ExperimentalMemCheck USES_TERMINAL )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(79):  set_property(TARGET ExperimentalMemCheck PROPERTY RULE_LAUNCH_CUSTOM  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(80):  set_property(TARGET ExperimentalMemCheck PROPERTY FOLDER CTestDashboardTargets )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(75):  add_custom_target(ExperimentalSubmit /opt/homebrew/Cellar/cmake/3.27.8/bin/ctest  -D ExperimentalSubmit USES_TERMINAL )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(79):  set_property(TARGET ExperimentalSubmit PROPERTY RULE_LAUNCH_CUSTOM  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(80):  set_property(TARGET ExperimentalSubmit PROPERTY FOLDER CTestDashboardTargets )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(71):  foreach(testtype Start Update Configure Build Test Coverage MemCheck Submit )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(75):  add_custom_target(ContinuousStart /opt/homebrew/Cellar/cmake/3.27.8/bin/ctest  -D ContinuousStart USES_TERMINAL )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(79):  set_property(TARGET ContinuousStart PROPERTY RULE_LAUNCH_CUSTOM  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(80):  set_property(TARGET ContinuousStart PROPERTY FOLDER CTestDashboardTargets )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(75):  add_custom_target(ContinuousUpdate /opt/homebrew/Cellar/cmake/3.27.8/bin/ctest  -D ContinuousUpdate USES_TERMINAL )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(79):  set_property(TARGET ContinuousUpdate PROPERTY RULE_LAUNCH_CUSTOM  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(80):  set_property(TARGET ContinuousUpdate PROPERTY FOLDER CTestDashboardTargets )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(75):  add_custom_target(ContinuousConfigure /opt/homebrew/Cellar/cmake/3.27.8/bin/ctest  -D ContinuousConfigure USES_TERMINAL )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(79):  set_property(TARGET ContinuousConfigure PROPERTY RULE_LAUNCH_CUSTOM  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(80):  set_property(TARGET ContinuousConfigure PROPERTY FOLDER CTestDashboardTargets )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(75):  add_custom_target(ContinuousBuild /opt/homebrew/Cellar/cmake/3.27.8/bin/ctest  -D ContinuousBuild USES_TERMINAL )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(79):  set_property(TARGET ContinuousBuild PROPERTY RULE_LAUNCH_CUSTOM  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(80):  set_property(TARGET ContinuousBuild PROPERTY FOLDER CTestDashboardTargets )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(75):  add_custom_target(ContinuousTest /opt/homebrew/Cellar/cmake/3.27.8/bin/ctest  -D ContinuousTest USES_TERMINAL )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(79):  set_property(TARGET ContinuousTest PROPERTY RULE_LAUNCH_CUSTOM  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(80):  set_property(TARGET ContinuousTest PROPERTY FOLDER CTestDashboardTargets )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(75):  add_custom_target(ContinuousCoverage /opt/homebrew/Cellar/cmake/3.27.8/bin/ctest  -D ContinuousCoverage USES_TERMINAL )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(79):  set_property(TARGET ContinuousCoverage PROPERTY RULE_LAUNCH_CUSTOM  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(80):  set_property(TARGET ContinuousCoverage PROPERTY FOLDER CTestDashboardTargets )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(75):  add_custom_target(ContinuousMemCheck /opt/homebrew/Cellar/cmake/3.27.8/bin/ctest  -D ContinuousMemCheck USES_TERMINAL )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(79):  set_property(TARGET ContinuousMemCheck PROPERTY RULE_LAUNCH_CUSTOM  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(80):  set_property(TARGET ContinuousMemCheck PROPERTY FOLDER CTestDashboardTargets )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(75):  add_custom_target(ContinuousSubmit /opt/homebrew/Cellar/cmake/3.27.8/bin/ctest  -D ContinuousSubmit USES_TERMINAL )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(79):  set_property(TARGET ContinuousSubmit PROPERTY RULE_LAUNCH_CUSTOM  )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(80):  set_property(TARGET ContinuousSubmit PROPERTY FOLDER CTestDashboardTargets )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTestTargets.cmake(87):  if(CTEST_TEST_TARGET_ALIAS )
/opt/homebrew/Cellar/cmake/3.27.8/share/cmake/Modules/CTest.cmake(265):  set(RUN_FROM_CTEST_OR_DART )
/Users/D032227/dev/cpp/spcmake/CMakeLists.txt(56):  add_test(NAME RunsOk COMMAND shadedpathv 25 )
/Users/D032227/dev/cpp/spcmake/CMakeLists.txt(57):  add_test(NAME Usage COMMAND shadedpathv )
/Users/D032227/dev/cpp/spcmake/CMakeLists.txt(58):  set_tests_properties(Usage PROPERTIES PASS_REGULAR_EXPRESSION shadedpathv .*number )
/Users/D032227/dev/cpp/spcmake/CMakeLists.txt(59):  add_test(NAME StandardUse COMMAND shadedpathv 49 )
/Users/D032227/dev/cpp/spcmake/CMakeLists.txt(60):  set_tests_properties(StandardUse PROPERTIES PASS_REGULAR_EXPRESSION 49 is 7 )
/Users/D032227/dev/cpp/spcmake/CMakeLists.txt(62):  function(do_test target arg result )
/Users/D032227/dev/cpp/spcmake/CMakeLists.txt(69):  do_test(Tutorial 4 4 is 2 )
/Users/D032227/dev/cpp/spcmake/CMakeLists.txt(63):  add_test(NAME Comp4 COMMAND shadedpathv 4 )
/Users/D032227/dev/cpp/spcmake/CMakeLists.txt(64):  set_tests_properties(Comp4 PROPERTIES PASS_REGULAR_EXPRESSION 4 is 2 )
/Users/D032227/dev/cpp/spcmake/CMakeLists.txt(70):  do_test(Tutorial 9 9 is 3 )
/Users/D032227/dev/cpp/spcmake/CMakeLists.txt(63):  add_test(NAME Comp9 COMMAND shadedpathv 9 )
/Users/D032227/dev/cpp/spcmake/CMakeLists.txt(64):  set_tests_properties(Comp9 PROPERTIES PASS_REGULAR_EXPRESSION 9 is 3 )
/Users/D032227/dev/cpp/spcmake/CMakeLists.txt(71):  do_test(Tutorial 5 5 is 2.236 )
/Users/D032227/dev/cpp/spcmake/CMakeLists.txt(63):  add_test(NAME Comp5 COMMAND shadedpathv 5 )
/Users/D032227/dev/cpp/spcmake/CMakeLists.txt(64):  set_tests_properties(Comp5 PROPERTIES PASS_REGULAR_EXPRESSION 5 is 2.236 )
/Users/D032227/dev/cpp/spcmake/CMakeLists.txt(72):  do_test(Tutorial 7 7 is 2.645 )
/Users/D032227/dev/cpp/spcmake/CMakeLists.txt(63):  add_test(NAME Comp7 COMMAND shadedpathv 7 )
/Users/D032227/dev/cpp/spcmake/CMakeLists.txt(64):  set_tests_properties(Comp7 PROPERTIES PASS_REGULAR_EXPRESSION 7 is 2.645 )
/Users/D032227/dev/cpp/spcmake/CMakeLists.txt(73):  do_test(Tutorial 25 25 is 5 )
/Users/D032227/dev/cpp/spcmake/CMakeLists.txt(63):  add_test(NAME Comp25 COMMAND shadedpathv 25 )
/Users/D032227/dev/cpp/spcmake/CMakeLists.txt(64):  set_tests_properties(Comp25 PROPERTIES PASS_REGULAR_EXPRESSION 25 is 5 )
/Users/D032227/dev/cpp/spcmake/CMakeLists.txt(74):  do_test(Tutorial -25 -25 is (-nan|nan|0) )
/Users/D032227/dev/cpp/spcmake/CMakeLists.txt(63):  add_test(NAME Comp-25 COMMAND shadedpathv -25 )
/Users/D032227/dev/cpp/spcmake/CMakeLists.txt(64):  set_tests_properties(Comp-25 PROPERTIES PASS_REGULAR_EXPRESSION -25 is (-nan|nan|0) )
/Users/D032227/dev/cpp/spcmake/CMakeLists.txt(75):  do_test(Tutorial 0.0001 0.0001 is 0.01 )
/Users/D032227/dev/cpp/spcmake/CMakeLists.txt(63):  add_test(NAME Comp0.0001 COMMAND shadedpathv 0.0001 )
/Users/D032227/dev/cpp/spcmake/CMakeLists.txt(64):  set_tests_properties(Comp0.0001 PROPERTIES PASS_REGULAR_EXPRESSION 0.0001 is 0.01 )
-- Configuring done (0.3s)
-- Generating done (0.3s)
-- Build files have been written to: /Users/D032227/dev/cpp/spcmake/build
